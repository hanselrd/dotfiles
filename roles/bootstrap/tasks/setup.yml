---
# tasks file for bootstrap

- name: Change shell to zsh
  command: "chsh -s /bin/zsh {{ bootstrap_user }}"
  register: output
- debug:
    msg: "{{ output.stdout_lines }}"

- name: Install latest Node LTS version
  become: yes
  become_user: "{{ bootstrap_user }}"
  shell: |
    . {{ bootstrap_user_dir }}/.zshrc
    nvm install --lts --latest-npm
  args:
    executable: /usr/bin/zsh
  register: output
- debug:
    msg: "{{ output.stdout_lines }}"

- name: Install latest Python packages
  become: yes
  become_user: "{{ bootstrap_user }}"
  shell: |
    . {{ bootstrap_user_dir }}/.zshrc
    pip install --upgrade --user pipenv black cmake-format
  args:
    executable: /usr/bin/zsh
  register: output
- debug:
    msg: "{{ output.stdout_lines }}"

- name: Install latest Rust toolchain
  become: yes
  become_user: "{{ bootstrap_user }}"
  shell: |
    . {{ bootstrap_user_dir }}/.zshrc
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --no-modify-path -y
    rustup component add rls rust-analysis rust-src
    rustup update
    cargo install cargo-tree cargo-edit wasm-pack || true
    mkdir -p {{ bootstrap_user_dir }}/.config/rustfmt
    rustfmt --print-config default {{ bootstrap_user_dir }}/.config/rustfmt/rustfmt.toml
  args:
    executable: /usr/bin/zsh
    warn: no
  register: output
- debug:
    msg: "{{ output.stdout_lines }}"

- name: Install latest Elm version
  become: yes
  become_user: "{{ bootstrap_user }}"
  # shell: |
  #   curl -L -o {{ bootstrap_temp_dir }}/elm.gz https://github.com/elm/compiler/releases/download/0.19.1/binary-for-linux-64-bit.gz
  #   gunzip {{ bootstrap_temp_dir }}/elm.gz
  #   chmod +x {{ bootstrap_temp_dir }}/elm
  #   mv {{ bootstrap_temp_dir }}/elm /usr/local/bin
  shell: |
    . {{ bootstrap_user_dir }}/.zshrc
    npm install -g elm elm-format elm-test @elm-tooling/elm-language-server
    npm update -g
  args:
    executable: /usr/bin/zsh
    warn: no
  register: output
- debug:
    msg: "{{ output.stdout_lines }}"

# - name: Install latest Haskell toolchain
#   become: yes
#   become_user: "{{ bootstrap_user }}"
#   shell: |
#     . {{ bootstrap_user_dir }}/.zshrc
#     stack upgrade
#     stack install ghcid
#     stack ./install.hs hie
#   args:
#     chdir: "{{ bootstrap_user_dir }}/.haskell-ide-engine"
#     executable: /usr/bin/zsh
#     warn: no
#   register: output
# - debug:
#     msg: "{{ output.stdout_lines }}"
