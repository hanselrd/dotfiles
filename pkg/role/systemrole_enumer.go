// Code generated by "enumer -type SystemRole -trimprefix SystemRole -linecomment -json -text -transform lower"; DO NOT EDIT.

package role

import (
	"encoding/json"
	"fmt"
	"strings"
)

const _SystemRoleName = "bootstrapbootgarudahome-manageri18nkernelmonitoringmotdnetworkingnixopensshshellsudotimeuservirtualizationwslx11"

var _SystemRoleIndex = [...]uint8{0, 9, 13, 19, 31, 35, 41, 51, 55, 65, 68, 75, 80, 84, 88, 92, 106, 109, 112}

const _SystemRoleLowerName = "bootstrapbootgarudahome-manageri18nkernelmonitoringmotdnetworkingnixopensshshellsudotimeuservirtualizationwslx11"

func (i SystemRole) String() string {
	if i >= SystemRole(len(_SystemRoleIndex)-1) {
		return fmt.Sprintf("SystemRole(%d)", i)
	}
	return _SystemRoleName[_SystemRoleIndex[i]:_SystemRoleIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _SystemRoleNoOp() {
	var x [1]struct{}
	_ = x[SystemRoleBootstrap-(0)]
	_ = x[SystemRoleBoot-(1)]
	_ = x[SystemRoleGaruda-(2)]
	_ = x[SystemRoleHomeManager-(3)]
	_ = x[SystemRoleI18N-(4)]
	_ = x[SystemRoleKernel-(5)]
	_ = x[SystemRoleMonitoring-(6)]
	_ = x[SystemRoleMotd-(7)]
	_ = x[SystemRoleNetworking-(8)]
	_ = x[SystemRoleNix-(9)]
	_ = x[SystemRoleOpenSsh-(10)]
	_ = x[SystemRoleShell-(11)]
	_ = x[SystemRoleSudo-(12)]
	_ = x[SystemRoleTime-(13)]
	_ = x[SystemRoleUser-(14)]
	_ = x[SystemRoleVirtualization-(15)]
	_ = x[SystemRoleWsl-(16)]
	_ = x[SystemRoleX11-(17)]
}

var _SystemRoleValues = []SystemRole{SystemRoleBootstrap, SystemRoleBoot, SystemRoleGaruda, SystemRoleHomeManager, SystemRoleI18N, SystemRoleKernel, SystemRoleMonitoring, SystemRoleMotd, SystemRoleNetworking, SystemRoleNix, SystemRoleOpenSsh, SystemRoleShell, SystemRoleSudo, SystemRoleTime, SystemRoleUser, SystemRoleVirtualization, SystemRoleWsl, SystemRoleX11}

var _SystemRoleNameToValueMap = map[string]SystemRole{
	_SystemRoleName[0:9]:          SystemRoleBootstrap,
	_SystemRoleLowerName[0:9]:     SystemRoleBootstrap,
	_SystemRoleName[9:13]:         SystemRoleBoot,
	_SystemRoleLowerName[9:13]:    SystemRoleBoot,
	_SystemRoleName[13:19]:        SystemRoleGaruda,
	_SystemRoleLowerName[13:19]:   SystemRoleGaruda,
	_SystemRoleName[19:31]:        SystemRoleHomeManager,
	_SystemRoleLowerName[19:31]:   SystemRoleHomeManager,
	_SystemRoleName[31:35]:        SystemRoleI18N,
	_SystemRoleLowerName[31:35]:   SystemRoleI18N,
	_SystemRoleName[35:41]:        SystemRoleKernel,
	_SystemRoleLowerName[35:41]:   SystemRoleKernel,
	_SystemRoleName[41:51]:        SystemRoleMonitoring,
	_SystemRoleLowerName[41:51]:   SystemRoleMonitoring,
	_SystemRoleName[51:55]:        SystemRoleMotd,
	_SystemRoleLowerName[51:55]:   SystemRoleMotd,
	_SystemRoleName[55:65]:        SystemRoleNetworking,
	_SystemRoleLowerName[55:65]:   SystemRoleNetworking,
	_SystemRoleName[65:68]:        SystemRoleNix,
	_SystemRoleLowerName[65:68]:   SystemRoleNix,
	_SystemRoleName[68:75]:        SystemRoleOpenSsh,
	_SystemRoleLowerName[68:75]:   SystemRoleOpenSsh,
	_SystemRoleName[75:80]:        SystemRoleShell,
	_SystemRoleLowerName[75:80]:   SystemRoleShell,
	_SystemRoleName[80:84]:        SystemRoleSudo,
	_SystemRoleLowerName[80:84]:   SystemRoleSudo,
	_SystemRoleName[84:88]:        SystemRoleTime,
	_SystemRoleLowerName[84:88]:   SystemRoleTime,
	_SystemRoleName[88:92]:        SystemRoleUser,
	_SystemRoleLowerName[88:92]:   SystemRoleUser,
	_SystemRoleName[92:106]:       SystemRoleVirtualization,
	_SystemRoleLowerName[92:106]:  SystemRoleVirtualization,
	_SystemRoleName[106:109]:      SystemRoleWsl,
	_SystemRoleLowerName[106:109]: SystemRoleWsl,
	_SystemRoleName[109:112]:      SystemRoleX11,
	_SystemRoleLowerName[109:112]: SystemRoleX11,
}

var _SystemRoleNames = []string{
	_SystemRoleName[0:9],
	_SystemRoleName[9:13],
	_SystemRoleName[13:19],
	_SystemRoleName[19:31],
	_SystemRoleName[31:35],
	_SystemRoleName[35:41],
	_SystemRoleName[41:51],
	_SystemRoleName[51:55],
	_SystemRoleName[55:65],
	_SystemRoleName[65:68],
	_SystemRoleName[68:75],
	_SystemRoleName[75:80],
	_SystemRoleName[80:84],
	_SystemRoleName[84:88],
	_SystemRoleName[88:92],
	_SystemRoleName[92:106],
	_SystemRoleName[106:109],
	_SystemRoleName[109:112],
}

// SystemRoleString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func SystemRoleString(s string) (SystemRole, error) {
	if val, ok := _SystemRoleNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _SystemRoleNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to SystemRole values", s)
}

// SystemRoleValues returns all values of the enum
func SystemRoleValues() []SystemRole {
	return _SystemRoleValues
}

// SystemRoleStrings returns a slice of all String values of the enum
func SystemRoleStrings() []string {
	strs := make([]string, len(_SystemRoleNames))
	copy(strs, _SystemRoleNames)
	return strs
}

// IsASystemRole returns "true" if the value is listed in the enum definition. "false" otherwise
func (i SystemRole) IsASystemRole() bool {
	for _, v := range _SystemRoleValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for SystemRole
func (i SystemRole) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for SystemRole
func (i *SystemRole) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("SystemRole should be a string, got %s", data)
	}

	var err error
	*i, err = SystemRoleString(s)
	return err
}

// MarshalText implements the encoding.TextMarshaler interface for SystemRole
func (i SystemRole) MarshalText() ([]byte, error) {
	return []byte(i.String()), nil
}

// UnmarshalText implements the encoding.TextUnmarshaler interface for SystemRole
func (i *SystemRole) UnmarshalText(text []byte) error {
	var err error
	*i, err = SystemRoleString(string(text))
	return err
}
