// Code generated by "enumer -type SystemRole -trimprefix SystemRole"; DO NOT EDIT.

package role

import (
	"fmt"
	"strings"
)

const _SystemRoleName = "BootstrapBootChocolateyCockpitDockerFuseGarudaGlazeWMHomeManagerHyprlandI18NKDEKernelMonitoringMotdNetworkingNixOpenSshShellSudoTimeUdisks2UserWinGetWslXServerXrdpZram"

var _SystemRoleIndex = [...]uint8{0, 9, 13, 23, 30, 36, 40, 46, 53, 64, 72, 76, 79, 85, 95, 99, 109, 112, 119, 124, 128, 132, 139, 143, 149, 152, 159, 163, 167}

const _SystemRoleLowerName = "bootstrapbootchocolateycockpitdockerfusegarudaglazewmhomemanagerhyprlandi18nkdekernelmonitoringmotdnetworkingnixopensshshellsudotimeudisks2userwingetwslxserverxrdpzram"

func (i SystemRole) String() string {
	if i >= SystemRole(len(_SystemRoleIndex)-1) {
		return fmt.Sprintf("SystemRole(%d)", i)
	}
	return _SystemRoleName[_SystemRoleIndex[i]:_SystemRoleIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _SystemRoleNoOp() {
	var x [1]struct{}
	_ = x[SystemRoleBootstrap-(0)]
	_ = x[SystemRoleBoot-(1)]
	_ = x[SystemRoleChocolatey-(2)]
	_ = x[SystemRoleCockpit-(3)]
	_ = x[SystemRoleDocker-(4)]
	_ = x[SystemRoleFuse-(5)]
	_ = x[SystemRoleGaruda-(6)]
	_ = x[SystemRoleGlazeWM-(7)]
	_ = x[SystemRoleHomeManager-(8)]
	_ = x[SystemRoleHyprland-(9)]
	_ = x[SystemRoleI18N-(10)]
	_ = x[SystemRoleKDE-(11)]
	_ = x[SystemRoleKernel-(12)]
	_ = x[SystemRoleMonitoring-(13)]
	_ = x[SystemRoleMotd-(14)]
	_ = x[SystemRoleNetworking-(15)]
	_ = x[SystemRoleNix-(16)]
	_ = x[SystemRoleOpenSsh-(17)]
	_ = x[SystemRoleShell-(18)]
	_ = x[SystemRoleSudo-(19)]
	_ = x[SystemRoleTime-(20)]
	_ = x[SystemRoleUdisks2-(21)]
	_ = x[SystemRoleUser-(22)]
	_ = x[SystemRoleWinGet-(23)]
	_ = x[SystemRoleWsl-(24)]
	_ = x[SystemRoleXServer-(25)]
	_ = x[SystemRoleXrdp-(26)]
	_ = x[SystemRoleZram-(27)]
}

var _SystemRoleValues = []SystemRole{SystemRoleBootstrap, SystemRoleBoot, SystemRoleChocolatey, SystemRoleCockpit, SystemRoleDocker, SystemRoleFuse, SystemRoleGaruda, SystemRoleGlazeWM, SystemRoleHomeManager, SystemRoleHyprland, SystemRoleI18N, SystemRoleKDE, SystemRoleKernel, SystemRoleMonitoring, SystemRoleMotd, SystemRoleNetworking, SystemRoleNix, SystemRoleOpenSsh, SystemRoleShell, SystemRoleSudo, SystemRoleTime, SystemRoleUdisks2, SystemRoleUser, SystemRoleWinGet, SystemRoleWsl, SystemRoleXServer, SystemRoleXrdp, SystemRoleZram}

var _SystemRoleNameToValueMap = map[string]SystemRole{
	_SystemRoleName[0:9]:          SystemRoleBootstrap,
	_SystemRoleLowerName[0:9]:     SystemRoleBootstrap,
	_SystemRoleName[9:13]:         SystemRoleBoot,
	_SystemRoleLowerName[9:13]:    SystemRoleBoot,
	_SystemRoleName[13:23]:        SystemRoleChocolatey,
	_SystemRoleLowerName[13:23]:   SystemRoleChocolatey,
	_SystemRoleName[23:30]:        SystemRoleCockpit,
	_SystemRoleLowerName[23:30]:   SystemRoleCockpit,
	_SystemRoleName[30:36]:        SystemRoleDocker,
	_SystemRoleLowerName[30:36]:   SystemRoleDocker,
	_SystemRoleName[36:40]:        SystemRoleFuse,
	_SystemRoleLowerName[36:40]:   SystemRoleFuse,
	_SystemRoleName[40:46]:        SystemRoleGaruda,
	_SystemRoleLowerName[40:46]:   SystemRoleGaruda,
	_SystemRoleName[46:53]:        SystemRoleGlazeWM,
	_SystemRoleLowerName[46:53]:   SystemRoleGlazeWM,
	_SystemRoleName[53:64]:        SystemRoleHomeManager,
	_SystemRoleLowerName[53:64]:   SystemRoleHomeManager,
	_SystemRoleName[64:72]:        SystemRoleHyprland,
	_SystemRoleLowerName[64:72]:   SystemRoleHyprland,
	_SystemRoleName[72:76]:        SystemRoleI18N,
	_SystemRoleLowerName[72:76]:   SystemRoleI18N,
	_SystemRoleName[76:79]:        SystemRoleKDE,
	_SystemRoleLowerName[76:79]:   SystemRoleKDE,
	_SystemRoleName[79:85]:        SystemRoleKernel,
	_SystemRoleLowerName[79:85]:   SystemRoleKernel,
	_SystemRoleName[85:95]:        SystemRoleMonitoring,
	_SystemRoleLowerName[85:95]:   SystemRoleMonitoring,
	_SystemRoleName[95:99]:        SystemRoleMotd,
	_SystemRoleLowerName[95:99]:   SystemRoleMotd,
	_SystemRoleName[99:109]:       SystemRoleNetworking,
	_SystemRoleLowerName[99:109]:  SystemRoleNetworking,
	_SystemRoleName[109:112]:      SystemRoleNix,
	_SystemRoleLowerName[109:112]: SystemRoleNix,
	_SystemRoleName[112:119]:      SystemRoleOpenSsh,
	_SystemRoleLowerName[112:119]: SystemRoleOpenSsh,
	_SystemRoleName[119:124]:      SystemRoleShell,
	_SystemRoleLowerName[119:124]: SystemRoleShell,
	_SystemRoleName[124:128]:      SystemRoleSudo,
	_SystemRoleLowerName[124:128]: SystemRoleSudo,
	_SystemRoleName[128:132]:      SystemRoleTime,
	_SystemRoleLowerName[128:132]: SystemRoleTime,
	_SystemRoleName[132:139]:      SystemRoleUdisks2,
	_SystemRoleLowerName[132:139]: SystemRoleUdisks2,
	_SystemRoleName[139:143]:      SystemRoleUser,
	_SystemRoleLowerName[139:143]: SystemRoleUser,
	_SystemRoleName[143:149]:      SystemRoleWinGet,
	_SystemRoleLowerName[143:149]: SystemRoleWinGet,
	_SystemRoleName[149:152]:      SystemRoleWsl,
	_SystemRoleLowerName[149:152]: SystemRoleWsl,
	_SystemRoleName[152:159]:      SystemRoleXServer,
	_SystemRoleLowerName[152:159]: SystemRoleXServer,
	_SystemRoleName[159:163]:      SystemRoleXrdp,
	_SystemRoleLowerName[159:163]: SystemRoleXrdp,
	_SystemRoleName[163:167]:      SystemRoleZram,
	_SystemRoleLowerName[163:167]: SystemRoleZram,
}

var _SystemRoleNames = []string{
	_SystemRoleName[0:9],
	_SystemRoleName[9:13],
	_SystemRoleName[13:23],
	_SystemRoleName[23:30],
	_SystemRoleName[30:36],
	_SystemRoleName[36:40],
	_SystemRoleName[40:46],
	_SystemRoleName[46:53],
	_SystemRoleName[53:64],
	_SystemRoleName[64:72],
	_SystemRoleName[72:76],
	_SystemRoleName[76:79],
	_SystemRoleName[79:85],
	_SystemRoleName[85:95],
	_SystemRoleName[95:99],
	_SystemRoleName[99:109],
	_SystemRoleName[109:112],
	_SystemRoleName[112:119],
	_SystemRoleName[119:124],
	_SystemRoleName[124:128],
	_SystemRoleName[128:132],
	_SystemRoleName[132:139],
	_SystemRoleName[139:143],
	_SystemRoleName[143:149],
	_SystemRoleName[149:152],
	_SystemRoleName[152:159],
	_SystemRoleName[159:163],
	_SystemRoleName[163:167],
}

// SystemRoleString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func SystemRoleString(s string) (SystemRole, error) {
	if val, ok := _SystemRoleNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _SystemRoleNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to SystemRole values", s)
}

// SystemRoleValues returns all values of the enum
func SystemRoleValues() []SystemRole {
	return _SystemRoleValues
}

// SystemRoleStrings returns a slice of all String values of the enum
func SystemRoleStrings() []string {
	strs := make([]string, len(_SystemRoleNames))
	copy(strs, _SystemRoleNames)
	return strs
}

// IsASystemRole returns "true" if the value is listed in the enum definition. "false" otherwise
func (i SystemRole) IsASystemRole() bool {
	for _, v := range _SystemRoleValues {
		if i == v {
			return true
		}
	}
	return false
}
