// Code generated by "enumer -type SystemRole -trimprefix SystemRole"; DO NOT EDIT.

package role

import (
	"fmt"
	"strings"
)

const _SystemRoleName = "BootstrapBootChocolateyCockpitDockerFuseGarudaGlazeWMGrubHomeManagerHyprlandI18NKDEKernelMonitoringMotdNetworkingNixOpenSshQemuGuestShellSudoSystemdBootTimeUdisks2UserWinGetWslXServerXrdpZram"

var _SystemRoleIndex = [...]uint8{0, 9, 13, 23, 30, 36, 40, 46, 53, 57, 68, 76, 80, 83, 89, 99, 103, 113, 116, 123, 132, 137, 141, 152, 156, 163, 167, 173, 176, 183, 187, 191}

const _SystemRoleLowerName = "bootstrapbootchocolateycockpitdockerfusegarudaglazewmgrubhomemanagerhyprlandi18nkdekernelmonitoringmotdnetworkingnixopensshqemuguestshellsudosystemdboottimeudisks2userwingetwslxserverxrdpzram"

func (i SystemRole) String() string {
	if i >= SystemRole(len(_SystemRoleIndex)-1) {
		return fmt.Sprintf("SystemRole(%d)", i)
	}
	return _SystemRoleName[_SystemRoleIndex[i]:_SystemRoleIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _SystemRoleNoOp() {
	var x [1]struct{}
	_ = x[SystemRoleBootstrap-(0)]
	_ = x[SystemRoleBoot-(1)]
	_ = x[SystemRoleChocolatey-(2)]
	_ = x[SystemRoleCockpit-(3)]
	_ = x[SystemRoleDocker-(4)]
	_ = x[SystemRoleFuse-(5)]
	_ = x[SystemRoleGaruda-(6)]
	_ = x[SystemRoleGlazeWM-(7)]
	_ = x[SystemRoleGrub-(8)]
	_ = x[SystemRoleHomeManager-(9)]
	_ = x[SystemRoleHyprland-(10)]
	_ = x[SystemRoleI18N-(11)]
	_ = x[SystemRoleKDE-(12)]
	_ = x[SystemRoleKernel-(13)]
	_ = x[SystemRoleMonitoring-(14)]
	_ = x[SystemRoleMotd-(15)]
	_ = x[SystemRoleNetworking-(16)]
	_ = x[SystemRoleNix-(17)]
	_ = x[SystemRoleOpenSsh-(18)]
	_ = x[SystemRoleQemuGuest-(19)]
	_ = x[SystemRoleShell-(20)]
	_ = x[SystemRoleSudo-(21)]
	_ = x[SystemRoleSystemdBoot-(22)]
	_ = x[SystemRoleTime-(23)]
	_ = x[SystemRoleUdisks2-(24)]
	_ = x[SystemRoleUser-(25)]
	_ = x[SystemRoleWinGet-(26)]
	_ = x[SystemRoleWsl-(27)]
	_ = x[SystemRoleXServer-(28)]
	_ = x[SystemRoleXrdp-(29)]
	_ = x[SystemRoleZram-(30)]
}

var _SystemRoleValues = []SystemRole{SystemRoleBootstrap, SystemRoleBoot, SystemRoleChocolatey, SystemRoleCockpit, SystemRoleDocker, SystemRoleFuse, SystemRoleGaruda, SystemRoleGlazeWM, SystemRoleGrub, SystemRoleHomeManager, SystemRoleHyprland, SystemRoleI18N, SystemRoleKDE, SystemRoleKernel, SystemRoleMonitoring, SystemRoleMotd, SystemRoleNetworking, SystemRoleNix, SystemRoleOpenSsh, SystemRoleQemuGuest, SystemRoleShell, SystemRoleSudo, SystemRoleSystemdBoot, SystemRoleTime, SystemRoleUdisks2, SystemRoleUser, SystemRoleWinGet, SystemRoleWsl, SystemRoleXServer, SystemRoleXrdp, SystemRoleZram}

var _SystemRoleNameToValueMap = map[string]SystemRole{
	_SystemRoleName[0:9]:          SystemRoleBootstrap,
	_SystemRoleLowerName[0:9]:     SystemRoleBootstrap,
	_SystemRoleName[9:13]:         SystemRoleBoot,
	_SystemRoleLowerName[9:13]:    SystemRoleBoot,
	_SystemRoleName[13:23]:        SystemRoleChocolatey,
	_SystemRoleLowerName[13:23]:   SystemRoleChocolatey,
	_SystemRoleName[23:30]:        SystemRoleCockpit,
	_SystemRoleLowerName[23:30]:   SystemRoleCockpit,
	_SystemRoleName[30:36]:        SystemRoleDocker,
	_SystemRoleLowerName[30:36]:   SystemRoleDocker,
	_SystemRoleName[36:40]:        SystemRoleFuse,
	_SystemRoleLowerName[36:40]:   SystemRoleFuse,
	_SystemRoleName[40:46]:        SystemRoleGaruda,
	_SystemRoleLowerName[40:46]:   SystemRoleGaruda,
	_SystemRoleName[46:53]:        SystemRoleGlazeWM,
	_SystemRoleLowerName[46:53]:   SystemRoleGlazeWM,
	_SystemRoleName[53:57]:        SystemRoleGrub,
	_SystemRoleLowerName[53:57]:   SystemRoleGrub,
	_SystemRoleName[57:68]:        SystemRoleHomeManager,
	_SystemRoleLowerName[57:68]:   SystemRoleHomeManager,
	_SystemRoleName[68:76]:        SystemRoleHyprland,
	_SystemRoleLowerName[68:76]:   SystemRoleHyprland,
	_SystemRoleName[76:80]:        SystemRoleI18N,
	_SystemRoleLowerName[76:80]:   SystemRoleI18N,
	_SystemRoleName[80:83]:        SystemRoleKDE,
	_SystemRoleLowerName[80:83]:   SystemRoleKDE,
	_SystemRoleName[83:89]:        SystemRoleKernel,
	_SystemRoleLowerName[83:89]:   SystemRoleKernel,
	_SystemRoleName[89:99]:        SystemRoleMonitoring,
	_SystemRoleLowerName[89:99]:   SystemRoleMonitoring,
	_SystemRoleName[99:103]:       SystemRoleMotd,
	_SystemRoleLowerName[99:103]:  SystemRoleMotd,
	_SystemRoleName[103:113]:      SystemRoleNetworking,
	_SystemRoleLowerName[103:113]: SystemRoleNetworking,
	_SystemRoleName[113:116]:      SystemRoleNix,
	_SystemRoleLowerName[113:116]: SystemRoleNix,
	_SystemRoleName[116:123]:      SystemRoleOpenSsh,
	_SystemRoleLowerName[116:123]: SystemRoleOpenSsh,
	_SystemRoleName[123:132]:      SystemRoleQemuGuest,
	_SystemRoleLowerName[123:132]: SystemRoleQemuGuest,
	_SystemRoleName[132:137]:      SystemRoleShell,
	_SystemRoleLowerName[132:137]: SystemRoleShell,
	_SystemRoleName[137:141]:      SystemRoleSudo,
	_SystemRoleLowerName[137:141]: SystemRoleSudo,
	_SystemRoleName[141:152]:      SystemRoleSystemdBoot,
	_SystemRoleLowerName[141:152]: SystemRoleSystemdBoot,
	_SystemRoleName[152:156]:      SystemRoleTime,
	_SystemRoleLowerName[152:156]: SystemRoleTime,
	_SystemRoleName[156:163]:      SystemRoleUdisks2,
	_SystemRoleLowerName[156:163]: SystemRoleUdisks2,
	_SystemRoleName[163:167]:      SystemRoleUser,
	_SystemRoleLowerName[163:167]: SystemRoleUser,
	_SystemRoleName[167:173]:      SystemRoleWinGet,
	_SystemRoleLowerName[167:173]: SystemRoleWinGet,
	_SystemRoleName[173:176]:      SystemRoleWsl,
	_SystemRoleLowerName[173:176]: SystemRoleWsl,
	_SystemRoleName[176:183]:      SystemRoleXServer,
	_SystemRoleLowerName[176:183]: SystemRoleXServer,
	_SystemRoleName[183:187]:      SystemRoleXrdp,
	_SystemRoleLowerName[183:187]: SystemRoleXrdp,
	_SystemRoleName[187:191]:      SystemRoleZram,
	_SystemRoleLowerName[187:191]: SystemRoleZram,
}

var _SystemRoleNames = []string{
	_SystemRoleName[0:9],
	_SystemRoleName[9:13],
	_SystemRoleName[13:23],
	_SystemRoleName[23:30],
	_SystemRoleName[30:36],
	_SystemRoleName[36:40],
	_SystemRoleName[40:46],
	_SystemRoleName[46:53],
	_SystemRoleName[53:57],
	_SystemRoleName[57:68],
	_SystemRoleName[68:76],
	_SystemRoleName[76:80],
	_SystemRoleName[80:83],
	_SystemRoleName[83:89],
	_SystemRoleName[89:99],
	_SystemRoleName[99:103],
	_SystemRoleName[103:113],
	_SystemRoleName[113:116],
	_SystemRoleName[116:123],
	_SystemRoleName[123:132],
	_SystemRoleName[132:137],
	_SystemRoleName[137:141],
	_SystemRoleName[141:152],
	_SystemRoleName[152:156],
	_SystemRoleName[156:163],
	_SystemRoleName[163:167],
	_SystemRoleName[167:173],
	_SystemRoleName[173:176],
	_SystemRoleName[176:183],
	_SystemRoleName[183:187],
	_SystemRoleName[187:191],
}

// SystemRoleString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func SystemRoleString(s string) (SystemRole, error) {
	if val, ok := _SystemRoleNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _SystemRoleNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to SystemRole values", s)
}

// SystemRoleValues returns all values of the enum
func SystemRoleValues() []SystemRole {
	return _SystemRoleValues
}

// SystemRoleStrings returns a slice of all String values of the enum
func SystemRoleStrings() []string {
	strs := make([]string, len(_SystemRoleNames))
	copy(strs, _SystemRoleNames)
	return strs
}

// IsASystemRole returns "true" if the value is listed in the enum definition. "false" otherwise
func (i SystemRole) IsASystemRole() bool {
	for _, v := range _SystemRoleValues {
		if i == v {
			return true
		}
	}
	return false
}
