// Code generated by "enumer -type SystemRole -trimprefix SystemRole"; DO NOT EDIT.

package role

import (
	"fmt"
	"strings"
)

const _SystemRoleName = "BootstrapBootChocolateyCockpitDockerFuseGarudaGlazeWMGrubHomeManagerHyprlandKDEKernelLanguageMonitoringMotdNetworkingNixOpenSshQemuGuestShellSudoSystemdBootTimeUdisks2UserWinGetWslXServerXrdpZram"

var _SystemRoleIndex = [...]uint8{0, 9, 13, 23, 30, 36, 40, 46, 53, 57, 68, 76, 79, 85, 93, 103, 107, 117, 120, 127, 136, 141, 145, 156, 160, 167, 171, 177, 180, 187, 191, 195}

const _SystemRoleLowerName = "bootstrapbootchocolateycockpitdockerfusegarudaglazewmgrubhomemanagerhyprlandkdekernellanguagemonitoringmotdnetworkingnixopensshqemuguestshellsudosystemdboottimeudisks2userwingetwslxserverxrdpzram"

func (i SystemRole) String() string {
	if i >= SystemRole(len(_SystemRoleIndex)-1) {
		return fmt.Sprintf("SystemRole(%d)", i)
	}
	return _SystemRoleName[_SystemRoleIndex[i]:_SystemRoleIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _SystemRoleNoOp() {
	var x [1]struct{}
	_ = x[SystemRoleBootstrap-(0)]
	_ = x[SystemRoleBoot-(1)]
	_ = x[SystemRoleChocolatey-(2)]
	_ = x[SystemRoleCockpit-(3)]
	_ = x[SystemRoleDocker-(4)]
	_ = x[SystemRoleFuse-(5)]
	_ = x[SystemRoleGaruda-(6)]
	_ = x[SystemRoleGlazeWM-(7)]
	_ = x[SystemRoleGrub-(8)]
	_ = x[SystemRoleHomeManager-(9)]
	_ = x[SystemRoleHyprland-(10)]
	_ = x[SystemRoleKDE-(11)]
	_ = x[SystemRoleKernel-(12)]
	_ = x[SystemRoleLanguage-(13)]
	_ = x[SystemRoleMonitoring-(14)]
	_ = x[SystemRoleMotd-(15)]
	_ = x[SystemRoleNetworking-(16)]
	_ = x[SystemRoleNix-(17)]
	_ = x[SystemRoleOpenSsh-(18)]
	_ = x[SystemRoleQemuGuest-(19)]
	_ = x[SystemRoleShell-(20)]
	_ = x[SystemRoleSudo-(21)]
	_ = x[SystemRoleSystemdBoot-(22)]
	_ = x[SystemRoleTime-(23)]
	_ = x[SystemRoleUdisks2-(24)]
	_ = x[SystemRoleUser-(25)]
	_ = x[SystemRoleWinGet-(26)]
	_ = x[SystemRoleWsl-(27)]
	_ = x[SystemRoleXServer-(28)]
	_ = x[SystemRoleXrdp-(29)]
	_ = x[SystemRoleZram-(30)]
}

var _SystemRoleValues = []SystemRole{SystemRoleBootstrap, SystemRoleBoot, SystemRoleChocolatey, SystemRoleCockpit, SystemRoleDocker, SystemRoleFuse, SystemRoleGaruda, SystemRoleGlazeWM, SystemRoleGrub, SystemRoleHomeManager, SystemRoleHyprland, SystemRoleKDE, SystemRoleKernel, SystemRoleLanguage, SystemRoleMonitoring, SystemRoleMotd, SystemRoleNetworking, SystemRoleNix, SystemRoleOpenSsh, SystemRoleQemuGuest, SystemRoleShell, SystemRoleSudo, SystemRoleSystemdBoot, SystemRoleTime, SystemRoleUdisks2, SystemRoleUser, SystemRoleWinGet, SystemRoleWsl, SystemRoleXServer, SystemRoleXrdp, SystemRoleZram}

var _SystemRoleNameToValueMap = map[string]SystemRole{
	_SystemRoleName[0:9]:          SystemRoleBootstrap,
	_SystemRoleLowerName[0:9]:     SystemRoleBootstrap,
	_SystemRoleName[9:13]:         SystemRoleBoot,
	_SystemRoleLowerName[9:13]:    SystemRoleBoot,
	_SystemRoleName[13:23]:        SystemRoleChocolatey,
	_SystemRoleLowerName[13:23]:   SystemRoleChocolatey,
	_SystemRoleName[23:30]:        SystemRoleCockpit,
	_SystemRoleLowerName[23:30]:   SystemRoleCockpit,
	_SystemRoleName[30:36]:        SystemRoleDocker,
	_SystemRoleLowerName[30:36]:   SystemRoleDocker,
	_SystemRoleName[36:40]:        SystemRoleFuse,
	_SystemRoleLowerName[36:40]:   SystemRoleFuse,
	_SystemRoleName[40:46]:        SystemRoleGaruda,
	_SystemRoleLowerName[40:46]:   SystemRoleGaruda,
	_SystemRoleName[46:53]:        SystemRoleGlazeWM,
	_SystemRoleLowerName[46:53]:   SystemRoleGlazeWM,
	_SystemRoleName[53:57]:        SystemRoleGrub,
	_SystemRoleLowerName[53:57]:   SystemRoleGrub,
	_SystemRoleName[57:68]:        SystemRoleHomeManager,
	_SystemRoleLowerName[57:68]:   SystemRoleHomeManager,
	_SystemRoleName[68:76]:        SystemRoleHyprland,
	_SystemRoleLowerName[68:76]:   SystemRoleHyprland,
	_SystemRoleName[76:79]:        SystemRoleKDE,
	_SystemRoleLowerName[76:79]:   SystemRoleKDE,
	_SystemRoleName[79:85]:        SystemRoleKernel,
	_SystemRoleLowerName[79:85]:   SystemRoleKernel,
	_SystemRoleName[85:93]:        SystemRoleLanguage,
	_SystemRoleLowerName[85:93]:   SystemRoleLanguage,
	_SystemRoleName[93:103]:       SystemRoleMonitoring,
	_SystemRoleLowerName[93:103]:  SystemRoleMonitoring,
	_SystemRoleName[103:107]:      SystemRoleMotd,
	_SystemRoleLowerName[103:107]: SystemRoleMotd,
	_SystemRoleName[107:117]:      SystemRoleNetworking,
	_SystemRoleLowerName[107:117]: SystemRoleNetworking,
	_SystemRoleName[117:120]:      SystemRoleNix,
	_SystemRoleLowerName[117:120]: SystemRoleNix,
	_SystemRoleName[120:127]:      SystemRoleOpenSsh,
	_SystemRoleLowerName[120:127]: SystemRoleOpenSsh,
	_SystemRoleName[127:136]:      SystemRoleQemuGuest,
	_SystemRoleLowerName[127:136]: SystemRoleQemuGuest,
	_SystemRoleName[136:141]:      SystemRoleShell,
	_SystemRoleLowerName[136:141]: SystemRoleShell,
	_SystemRoleName[141:145]:      SystemRoleSudo,
	_SystemRoleLowerName[141:145]: SystemRoleSudo,
	_SystemRoleName[145:156]:      SystemRoleSystemdBoot,
	_SystemRoleLowerName[145:156]: SystemRoleSystemdBoot,
	_SystemRoleName[156:160]:      SystemRoleTime,
	_SystemRoleLowerName[156:160]: SystemRoleTime,
	_SystemRoleName[160:167]:      SystemRoleUdisks2,
	_SystemRoleLowerName[160:167]: SystemRoleUdisks2,
	_SystemRoleName[167:171]:      SystemRoleUser,
	_SystemRoleLowerName[167:171]: SystemRoleUser,
	_SystemRoleName[171:177]:      SystemRoleWinGet,
	_SystemRoleLowerName[171:177]: SystemRoleWinGet,
	_SystemRoleName[177:180]:      SystemRoleWsl,
	_SystemRoleLowerName[177:180]: SystemRoleWsl,
	_SystemRoleName[180:187]:      SystemRoleXServer,
	_SystemRoleLowerName[180:187]: SystemRoleXServer,
	_SystemRoleName[187:191]:      SystemRoleXrdp,
	_SystemRoleLowerName[187:191]: SystemRoleXrdp,
	_SystemRoleName[191:195]:      SystemRoleZram,
	_SystemRoleLowerName[191:195]: SystemRoleZram,
}

var _SystemRoleNames = []string{
	_SystemRoleName[0:9],
	_SystemRoleName[9:13],
	_SystemRoleName[13:23],
	_SystemRoleName[23:30],
	_SystemRoleName[30:36],
	_SystemRoleName[36:40],
	_SystemRoleName[40:46],
	_SystemRoleName[46:53],
	_SystemRoleName[53:57],
	_SystemRoleName[57:68],
	_SystemRoleName[68:76],
	_SystemRoleName[76:79],
	_SystemRoleName[79:85],
	_SystemRoleName[85:93],
	_SystemRoleName[93:103],
	_SystemRoleName[103:107],
	_SystemRoleName[107:117],
	_SystemRoleName[117:120],
	_SystemRoleName[120:127],
	_SystemRoleName[127:136],
	_SystemRoleName[136:141],
	_SystemRoleName[141:145],
	_SystemRoleName[145:156],
	_SystemRoleName[156:160],
	_SystemRoleName[160:167],
	_SystemRoleName[167:171],
	_SystemRoleName[171:177],
	_SystemRoleName[177:180],
	_SystemRoleName[180:187],
	_SystemRoleName[187:191],
	_SystemRoleName[191:195],
}

// SystemRoleString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func SystemRoleString(s string) (SystemRole, error) {
	if val, ok := _SystemRoleNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _SystemRoleNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to SystemRole values", s)
}

// SystemRoleValues returns all values of the enum
func SystemRoleValues() []SystemRole {
	return _SystemRoleValues
}

// SystemRoleStrings returns a slice of all String values of the enum
func SystemRoleStrings() []string {
	strs := make([]string, len(_SystemRoleNames))
	copy(strs, _SystemRoleNames)
	return strs
}

// IsASystemRole returns "true" if the value is listed in the enum definition. "false" otherwise
func (i SystemRole) IsASystemRole() bool {
	for _, v := range _SystemRoleValues {
		if i == v {
			return true
		}
	}
	return false
}
