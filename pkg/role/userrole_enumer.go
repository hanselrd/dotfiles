// Code generated by "enumer -type UserRole -trimprefix UserRole -linecomment -json -text -transform lower"; DO NOT EDIT.

package role

import (
	"encoding/json"
	"fmt"
	"strings"
)

const _UserRoleName = "bootstrapagenixalacrittybashbatbrowserdevelopmentdevelopment.cppdevelopment.dhalldevelopment.elixirdevelopment.gleamdevelopment.godevelopment.haskelldevelopment.javadevelopment.kotlindevelopment.luadevelopment.nickeldevelopment.nixdevelopment.nodejsdevelopment.purescriptdevelopment.pythondevelopment.rustdevelopment.shelldevelopment.zigdockereditorezafzfgithtopneovimnixoh-my-poshpagerripgrepscriptsshellsshstarshipterminalthemetmuxvscodezoxidezshzzz"

var _UserRoleIndex = [...]uint16{0, 9, 15, 24, 28, 31, 38, 49, 64, 81, 99, 116, 130, 149, 165, 183, 198, 216, 231, 249, 271, 289, 305, 322, 337, 343, 349, 352, 355, 358, 362, 368, 371, 381, 386, 393, 400, 405, 408, 416, 424, 429, 433, 439, 445, 448, 451}

const _UserRoleLowerName = "bootstrapagenixalacrittybashbatbrowserdevelopmentdevelopment.cppdevelopment.dhalldevelopment.elixirdevelopment.gleamdevelopment.godevelopment.haskelldevelopment.javadevelopment.kotlindevelopment.luadevelopment.nickeldevelopment.nixdevelopment.nodejsdevelopment.purescriptdevelopment.pythondevelopment.rustdevelopment.shelldevelopment.zigdockereditorezafzfgithtopneovimnixoh-my-poshpagerripgrepscriptsshellsshstarshipterminalthemetmuxvscodezoxidezshzzz"

func (i UserRole) String() string {
	if i >= UserRole(len(_UserRoleIndex)-1) {
		return fmt.Sprintf("UserRole(%d)", i)
	}
	return _UserRoleName[_UserRoleIndex[i]:_UserRoleIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _UserRoleNoOp() {
	var x [1]struct{}
	_ = x[UserRoleBootstrap-(0)]
	_ = x[UserRoleAgenix-(1)]
	_ = x[UserRoleAlacritty-(2)]
	_ = x[UserRoleBash-(3)]
	_ = x[UserRoleBat-(4)]
	_ = x[UserRoleBrowser-(5)]
	_ = x[UserRoleDevelopment-(6)]
	_ = x[UserRoleDevelopmentCpp-(7)]
	_ = x[UserRoleDevelopmentDhall-(8)]
	_ = x[UserRoleDevelopmentElixir-(9)]
	_ = x[UserRoleDevelopmentGleam-(10)]
	_ = x[UserRoleDevelopmentGo-(11)]
	_ = x[UserRoleDevelopmentHaskell-(12)]
	_ = x[UserRoleDevelopmentJava-(13)]
	_ = x[UserRoleDevelopmentKotlin-(14)]
	_ = x[UserRoleDevelopmentLua-(15)]
	_ = x[UserRoleDevelopmentNickel-(16)]
	_ = x[UserRoleDevelopmentNix-(17)]
	_ = x[UserRoleDevelopmentNodejs-(18)]
	_ = x[UserRoleDevelopmentPurescript-(19)]
	_ = x[UserRoleDevelopmentPython-(20)]
	_ = x[UserRoleDevelopmentRust-(21)]
	_ = x[UserRoleDevelopmentShell-(22)]
	_ = x[UserRoleDevelopmentZig-(23)]
	_ = x[UserRoleDocker-(24)]
	_ = x[UserRoleEditor-(25)]
	_ = x[UserRoleEza-(26)]
	_ = x[UserRoleFzf-(27)]
	_ = x[UserRoleGit-(28)]
	_ = x[UserRoleHtop-(29)]
	_ = x[UserRoleNeovim-(30)]
	_ = x[UserRoleNix-(31)]
	_ = x[UserRoleOhMyPosh-(32)]
	_ = x[UserRolePager-(33)]
	_ = x[UserRoleRipgrep-(34)]
	_ = x[UserRoleScripts-(35)]
	_ = x[UserRoleShell-(36)]
	_ = x[UserRoleSsh-(37)]
	_ = x[UserRoleStarship-(38)]
	_ = x[UserRoleTerminal-(39)]
	_ = x[UserRoleTheme-(40)]
	_ = x[UserRoleTmux-(41)]
	_ = x[UserRoleVscode-(42)]
	_ = x[UserRoleZoxide-(43)]
	_ = x[UserRoleZsh-(44)]
	_ = x[UserRoleZzz-(45)]
}

var _UserRoleValues = []UserRole{UserRoleBootstrap, UserRoleAgenix, UserRoleAlacritty, UserRoleBash, UserRoleBat, UserRoleBrowser, UserRoleDevelopment, UserRoleDevelopmentCpp, UserRoleDevelopmentDhall, UserRoleDevelopmentElixir, UserRoleDevelopmentGleam, UserRoleDevelopmentGo, UserRoleDevelopmentHaskell, UserRoleDevelopmentJava, UserRoleDevelopmentKotlin, UserRoleDevelopmentLua, UserRoleDevelopmentNickel, UserRoleDevelopmentNix, UserRoleDevelopmentNodejs, UserRoleDevelopmentPurescript, UserRoleDevelopmentPython, UserRoleDevelopmentRust, UserRoleDevelopmentShell, UserRoleDevelopmentZig, UserRoleDocker, UserRoleEditor, UserRoleEza, UserRoleFzf, UserRoleGit, UserRoleHtop, UserRoleNeovim, UserRoleNix, UserRoleOhMyPosh, UserRolePager, UserRoleRipgrep, UserRoleScripts, UserRoleShell, UserRoleSsh, UserRoleStarship, UserRoleTerminal, UserRoleTheme, UserRoleTmux, UserRoleVscode, UserRoleZoxide, UserRoleZsh, UserRoleZzz}

var _UserRoleNameToValueMap = map[string]UserRole{
	_UserRoleName[0:9]:          UserRoleBootstrap,
	_UserRoleLowerName[0:9]:     UserRoleBootstrap,
	_UserRoleName[9:15]:         UserRoleAgenix,
	_UserRoleLowerName[9:15]:    UserRoleAgenix,
	_UserRoleName[15:24]:        UserRoleAlacritty,
	_UserRoleLowerName[15:24]:   UserRoleAlacritty,
	_UserRoleName[24:28]:        UserRoleBash,
	_UserRoleLowerName[24:28]:   UserRoleBash,
	_UserRoleName[28:31]:        UserRoleBat,
	_UserRoleLowerName[28:31]:   UserRoleBat,
	_UserRoleName[31:38]:        UserRoleBrowser,
	_UserRoleLowerName[31:38]:   UserRoleBrowser,
	_UserRoleName[38:49]:        UserRoleDevelopment,
	_UserRoleLowerName[38:49]:   UserRoleDevelopment,
	_UserRoleName[49:64]:        UserRoleDevelopmentCpp,
	_UserRoleLowerName[49:64]:   UserRoleDevelopmentCpp,
	_UserRoleName[64:81]:        UserRoleDevelopmentDhall,
	_UserRoleLowerName[64:81]:   UserRoleDevelopmentDhall,
	_UserRoleName[81:99]:        UserRoleDevelopmentElixir,
	_UserRoleLowerName[81:99]:   UserRoleDevelopmentElixir,
	_UserRoleName[99:116]:       UserRoleDevelopmentGleam,
	_UserRoleLowerName[99:116]:  UserRoleDevelopmentGleam,
	_UserRoleName[116:130]:      UserRoleDevelopmentGo,
	_UserRoleLowerName[116:130]: UserRoleDevelopmentGo,
	_UserRoleName[130:149]:      UserRoleDevelopmentHaskell,
	_UserRoleLowerName[130:149]: UserRoleDevelopmentHaskell,
	_UserRoleName[149:165]:      UserRoleDevelopmentJava,
	_UserRoleLowerName[149:165]: UserRoleDevelopmentJava,
	_UserRoleName[165:183]:      UserRoleDevelopmentKotlin,
	_UserRoleLowerName[165:183]: UserRoleDevelopmentKotlin,
	_UserRoleName[183:198]:      UserRoleDevelopmentLua,
	_UserRoleLowerName[183:198]: UserRoleDevelopmentLua,
	_UserRoleName[198:216]:      UserRoleDevelopmentNickel,
	_UserRoleLowerName[198:216]: UserRoleDevelopmentNickel,
	_UserRoleName[216:231]:      UserRoleDevelopmentNix,
	_UserRoleLowerName[216:231]: UserRoleDevelopmentNix,
	_UserRoleName[231:249]:      UserRoleDevelopmentNodejs,
	_UserRoleLowerName[231:249]: UserRoleDevelopmentNodejs,
	_UserRoleName[249:271]:      UserRoleDevelopmentPurescript,
	_UserRoleLowerName[249:271]: UserRoleDevelopmentPurescript,
	_UserRoleName[271:289]:      UserRoleDevelopmentPython,
	_UserRoleLowerName[271:289]: UserRoleDevelopmentPython,
	_UserRoleName[289:305]:      UserRoleDevelopmentRust,
	_UserRoleLowerName[289:305]: UserRoleDevelopmentRust,
	_UserRoleName[305:322]:      UserRoleDevelopmentShell,
	_UserRoleLowerName[305:322]: UserRoleDevelopmentShell,
	_UserRoleName[322:337]:      UserRoleDevelopmentZig,
	_UserRoleLowerName[322:337]: UserRoleDevelopmentZig,
	_UserRoleName[337:343]:      UserRoleDocker,
	_UserRoleLowerName[337:343]: UserRoleDocker,
	_UserRoleName[343:349]:      UserRoleEditor,
	_UserRoleLowerName[343:349]: UserRoleEditor,
	_UserRoleName[349:352]:      UserRoleEza,
	_UserRoleLowerName[349:352]: UserRoleEza,
	_UserRoleName[352:355]:      UserRoleFzf,
	_UserRoleLowerName[352:355]: UserRoleFzf,
	_UserRoleName[355:358]:      UserRoleGit,
	_UserRoleLowerName[355:358]: UserRoleGit,
	_UserRoleName[358:362]:      UserRoleHtop,
	_UserRoleLowerName[358:362]: UserRoleHtop,
	_UserRoleName[362:368]:      UserRoleNeovim,
	_UserRoleLowerName[362:368]: UserRoleNeovim,
	_UserRoleName[368:371]:      UserRoleNix,
	_UserRoleLowerName[368:371]: UserRoleNix,
	_UserRoleName[371:381]:      UserRoleOhMyPosh,
	_UserRoleLowerName[371:381]: UserRoleOhMyPosh,
	_UserRoleName[381:386]:      UserRolePager,
	_UserRoleLowerName[381:386]: UserRolePager,
	_UserRoleName[386:393]:      UserRoleRipgrep,
	_UserRoleLowerName[386:393]: UserRoleRipgrep,
	_UserRoleName[393:400]:      UserRoleScripts,
	_UserRoleLowerName[393:400]: UserRoleScripts,
	_UserRoleName[400:405]:      UserRoleShell,
	_UserRoleLowerName[400:405]: UserRoleShell,
	_UserRoleName[405:408]:      UserRoleSsh,
	_UserRoleLowerName[405:408]: UserRoleSsh,
	_UserRoleName[408:416]:      UserRoleStarship,
	_UserRoleLowerName[408:416]: UserRoleStarship,
	_UserRoleName[416:424]:      UserRoleTerminal,
	_UserRoleLowerName[416:424]: UserRoleTerminal,
	_UserRoleName[424:429]:      UserRoleTheme,
	_UserRoleLowerName[424:429]: UserRoleTheme,
	_UserRoleName[429:433]:      UserRoleTmux,
	_UserRoleLowerName[429:433]: UserRoleTmux,
	_UserRoleName[433:439]:      UserRoleVscode,
	_UserRoleLowerName[433:439]: UserRoleVscode,
	_UserRoleName[439:445]:      UserRoleZoxide,
	_UserRoleLowerName[439:445]: UserRoleZoxide,
	_UserRoleName[445:448]:      UserRoleZsh,
	_UserRoleLowerName[445:448]: UserRoleZsh,
	_UserRoleName[448:451]:      UserRoleZzz,
	_UserRoleLowerName[448:451]: UserRoleZzz,
}

var _UserRoleNames = []string{
	_UserRoleName[0:9],
	_UserRoleName[9:15],
	_UserRoleName[15:24],
	_UserRoleName[24:28],
	_UserRoleName[28:31],
	_UserRoleName[31:38],
	_UserRoleName[38:49],
	_UserRoleName[49:64],
	_UserRoleName[64:81],
	_UserRoleName[81:99],
	_UserRoleName[99:116],
	_UserRoleName[116:130],
	_UserRoleName[130:149],
	_UserRoleName[149:165],
	_UserRoleName[165:183],
	_UserRoleName[183:198],
	_UserRoleName[198:216],
	_UserRoleName[216:231],
	_UserRoleName[231:249],
	_UserRoleName[249:271],
	_UserRoleName[271:289],
	_UserRoleName[289:305],
	_UserRoleName[305:322],
	_UserRoleName[322:337],
	_UserRoleName[337:343],
	_UserRoleName[343:349],
	_UserRoleName[349:352],
	_UserRoleName[352:355],
	_UserRoleName[355:358],
	_UserRoleName[358:362],
	_UserRoleName[362:368],
	_UserRoleName[368:371],
	_UserRoleName[371:381],
	_UserRoleName[381:386],
	_UserRoleName[386:393],
	_UserRoleName[393:400],
	_UserRoleName[400:405],
	_UserRoleName[405:408],
	_UserRoleName[408:416],
	_UserRoleName[416:424],
	_UserRoleName[424:429],
	_UserRoleName[429:433],
	_UserRoleName[433:439],
	_UserRoleName[439:445],
	_UserRoleName[445:448],
	_UserRoleName[448:451],
}

// UserRoleString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func UserRoleString(s string) (UserRole, error) {
	if val, ok := _UserRoleNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _UserRoleNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to UserRole values", s)
}

// UserRoleValues returns all values of the enum
func UserRoleValues() []UserRole {
	return _UserRoleValues
}

// UserRoleStrings returns a slice of all String values of the enum
func UserRoleStrings() []string {
	strs := make([]string, len(_UserRoleNames))
	copy(strs, _UserRoleNames)
	return strs
}

// IsAUserRole returns "true" if the value is listed in the enum definition. "false" otherwise
func (i UserRole) IsAUserRole() bool {
	for _, v := range _UserRoleValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for UserRole
func (i UserRole) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for UserRole
func (i *UserRole) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("UserRole should be a string, got %s", data)
	}

	var err error
	*i, err = UserRoleString(s)
	return err
}

// MarshalText implements the encoding.TextMarshaler interface for UserRole
func (i UserRole) MarshalText() ([]byte, error) {
	return []byte(i.String()), nil
}

// UnmarshalText implements the encoding.TextUnmarshaler interface for UserRole
func (i *UserRole) UnmarshalText(text []byte) error {
	var err error
	*i, err = UserRoleString(string(text))
	return err
}
