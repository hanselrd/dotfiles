// Code generated by "enumer -type UserRole -trimprefix UserRole -linecomment -json -text -transform lower"; DO NOT EDIT.

package role

import (
	"encoding/json"
	"fmt"
	"strings"
)

const _UserRoleName = "bootstrapalacrittybashbatbrowserdevelopmentdevelopment.cppdevelopment.dhalldevelopment.elixirdevelopment.gleamdevelopment.godevelopment.haskelldevelopment.javadevelopment.kotlindevelopment.luadevelopment.nickeldevelopment.nixdevelopment.nodejsdevelopment.purescriptdevelopment.pythondevelopment.rustdevelopment.shelldevelopment.zigdockereditorezafontsfzfgithtopneovimnixoh-my-poshpagerripgreprtsscriptsshellsshstarshipterminalthemetmuxvscodezoxidezshzzz"

var _UserRoleIndex = [...]uint16{0, 9, 18, 22, 25, 32, 43, 58, 75, 93, 110, 124, 143, 159, 177, 192, 210, 225, 243, 265, 283, 299, 316, 331, 337, 343, 346, 351, 354, 357, 361, 367, 370, 380, 385, 392, 395, 402, 407, 410, 418, 426, 431, 435, 441, 447, 450, 453}

const _UserRoleLowerName = "bootstrapalacrittybashbatbrowserdevelopmentdevelopment.cppdevelopment.dhalldevelopment.elixirdevelopment.gleamdevelopment.godevelopment.haskelldevelopment.javadevelopment.kotlindevelopment.luadevelopment.nickeldevelopment.nixdevelopment.nodejsdevelopment.purescriptdevelopment.pythondevelopment.rustdevelopment.shelldevelopment.zigdockereditorezafontsfzfgithtopneovimnixoh-my-poshpagerripgreprtsscriptsshellsshstarshipterminalthemetmuxvscodezoxidezshzzz"

func (i UserRole) String() string {
	if i >= UserRole(len(_UserRoleIndex)-1) {
		return fmt.Sprintf("UserRole(%d)", i)
	}
	return _UserRoleName[_UserRoleIndex[i]:_UserRoleIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _UserRoleNoOp() {
	var x [1]struct{}
	_ = x[UserRoleBootstrap-(0)]
	_ = x[UserRoleAlacritty-(1)]
	_ = x[UserRoleBash-(2)]
	_ = x[UserRoleBat-(3)]
	_ = x[UserRoleBrowser-(4)]
	_ = x[UserRoleDevelopment-(5)]
	_ = x[UserRoleDevelopmentCpp-(6)]
	_ = x[UserRoleDevelopmentDhall-(7)]
	_ = x[UserRoleDevelopmentElixir-(8)]
	_ = x[UserRoleDevelopmentGleam-(9)]
	_ = x[UserRoleDevelopmentGo-(10)]
	_ = x[UserRoleDevelopmentHaskell-(11)]
	_ = x[UserRoleDevelopmentJava-(12)]
	_ = x[UserRoleDevelopmentKotlin-(13)]
	_ = x[UserRoleDevelopmentLua-(14)]
	_ = x[UserRoleDevelopmentNickel-(15)]
	_ = x[UserRoleDevelopmentNix-(16)]
	_ = x[UserRoleDevelopmentNodejs-(17)]
	_ = x[UserRoleDevelopmentPurescript-(18)]
	_ = x[UserRoleDevelopmentPython-(19)]
	_ = x[UserRoleDevelopmentRust-(20)]
	_ = x[UserRoleDevelopmentShell-(21)]
	_ = x[UserRoleDevelopmentZig-(22)]
	_ = x[UserRoleDocker-(23)]
	_ = x[UserRoleEditor-(24)]
	_ = x[UserRoleEza-(25)]
	_ = x[UserRoleFonts-(26)]
	_ = x[UserRoleFzf-(27)]
	_ = x[UserRoleGit-(28)]
	_ = x[UserRoleHtop-(29)]
	_ = x[UserRoleNeovim-(30)]
	_ = x[UserRoleNix-(31)]
	_ = x[UserRoleOhMyPosh-(32)]
	_ = x[UserRolePager-(33)]
	_ = x[UserRoleRipgrep-(34)]
	_ = x[UserRoleRts-(35)]
	_ = x[UserRoleScripts-(36)]
	_ = x[UserRoleShell-(37)]
	_ = x[UserRoleSsh-(38)]
	_ = x[UserRoleStarship-(39)]
	_ = x[UserRoleTerminal-(40)]
	_ = x[UserRoleTheme-(41)]
	_ = x[UserRoleTmux-(42)]
	_ = x[UserRoleVscode-(43)]
	_ = x[UserRoleZoxide-(44)]
	_ = x[UserRoleZsh-(45)]
	_ = x[UserRoleZzz-(46)]
}

var _UserRoleValues = []UserRole{UserRoleBootstrap, UserRoleAlacritty, UserRoleBash, UserRoleBat, UserRoleBrowser, UserRoleDevelopment, UserRoleDevelopmentCpp, UserRoleDevelopmentDhall, UserRoleDevelopmentElixir, UserRoleDevelopmentGleam, UserRoleDevelopmentGo, UserRoleDevelopmentHaskell, UserRoleDevelopmentJava, UserRoleDevelopmentKotlin, UserRoleDevelopmentLua, UserRoleDevelopmentNickel, UserRoleDevelopmentNix, UserRoleDevelopmentNodejs, UserRoleDevelopmentPurescript, UserRoleDevelopmentPython, UserRoleDevelopmentRust, UserRoleDevelopmentShell, UserRoleDevelopmentZig, UserRoleDocker, UserRoleEditor, UserRoleEza, UserRoleFonts, UserRoleFzf, UserRoleGit, UserRoleHtop, UserRoleNeovim, UserRoleNix, UserRoleOhMyPosh, UserRolePager, UserRoleRipgrep, UserRoleRts, UserRoleScripts, UserRoleShell, UserRoleSsh, UserRoleStarship, UserRoleTerminal, UserRoleTheme, UserRoleTmux, UserRoleVscode, UserRoleZoxide, UserRoleZsh, UserRoleZzz}

var _UserRoleNameToValueMap = map[string]UserRole{
	_UserRoleName[0:9]:          UserRoleBootstrap,
	_UserRoleLowerName[0:9]:     UserRoleBootstrap,
	_UserRoleName[9:18]:         UserRoleAlacritty,
	_UserRoleLowerName[9:18]:    UserRoleAlacritty,
	_UserRoleName[18:22]:        UserRoleBash,
	_UserRoleLowerName[18:22]:   UserRoleBash,
	_UserRoleName[22:25]:        UserRoleBat,
	_UserRoleLowerName[22:25]:   UserRoleBat,
	_UserRoleName[25:32]:        UserRoleBrowser,
	_UserRoleLowerName[25:32]:   UserRoleBrowser,
	_UserRoleName[32:43]:        UserRoleDevelopment,
	_UserRoleLowerName[32:43]:   UserRoleDevelopment,
	_UserRoleName[43:58]:        UserRoleDevelopmentCpp,
	_UserRoleLowerName[43:58]:   UserRoleDevelopmentCpp,
	_UserRoleName[58:75]:        UserRoleDevelopmentDhall,
	_UserRoleLowerName[58:75]:   UserRoleDevelopmentDhall,
	_UserRoleName[75:93]:        UserRoleDevelopmentElixir,
	_UserRoleLowerName[75:93]:   UserRoleDevelopmentElixir,
	_UserRoleName[93:110]:       UserRoleDevelopmentGleam,
	_UserRoleLowerName[93:110]:  UserRoleDevelopmentGleam,
	_UserRoleName[110:124]:      UserRoleDevelopmentGo,
	_UserRoleLowerName[110:124]: UserRoleDevelopmentGo,
	_UserRoleName[124:143]:      UserRoleDevelopmentHaskell,
	_UserRoleLowerName[124:143]: UserRoleDevelopmentHaskell,
	_UserRoleName[143:159]:      UserRoleDevelopmentJava,
	_UserRoleLowerName[143:159]: UserRoleDevelopmentJava,
	_UserRoleName[159:177]:      UserRoleDevelopmentKotlin,
	_UserRoleLowerName[159:177]: UserRoleDevelopmentKotlin,
	_UserRoleName[177:192]:      UserRoleDevelopmentLua,
	_UserRoleLowerName[177:192]: UserRoleDevelopmentLua,
	_UserRoleName[192:210]:      UserRoleDevelopmentNickel,
	_UserRoleLowerName[192:210]: UserRoleDevelopmentNickel,
	_UserRoleName[210:225]:      UserRoleDevelopmentNix,
	_UserRoleLowerName[210:225]: UserRoleDevelopmentNix,
	_UserRoleName[225:243]:      UserRoleDevelopmentNodejs,
	_UserRoleLowerName[225:243]: UserRoleDevelopmentNodejs,
	_UserRoleName[243:265]:      UserRoleDevelopmentPurescript,
	_UserRoleLowerName[243:265]: UserRoleDevelopmentPurescript,
	_UserRoleName[265:283]:      UserRoleDevelopmentPython,
	_UserRoleLowerName[265:283]: UserRoleDevelopmentPython,
	_UserRoleName[283:299]:      UserRoleDevelopmentRust,
	_UserRoleLowerName[283:299]: UserRoleDevelopmentRust,
	_UserRoleName[299:316]:      UserRoleDevelopmentShell,
	_UserRoleLowerName[299:316]: UserRoleDevelopmentShell,
	_UserRoleName[316:331]:      UserRoleDevelopmentZig,
	_UserRoleLowerName[316:331]: UserRoleDevelopmentZig,
	_UserRoleName[331:337]:      UserRoleDocker,
	_UserRoleLowerName[331:337]: UserRoleDocker,
	_UserRoleName[337:343]:      UserRoleEditor,
	_UserRoleLowerName[337:343]: UserRoleEditor,
	_UserRoleName[343:346]:      UserRoleEza,
	_UserRoleLowerName[343:346]: UserRoleEza,
	_UserRoleName[346:351]:      UserRoleFonts,
	_UserRoleLowerName[346:351]: UserRoleFonts,
	_UserRoleName[351:354]:      UserRoleFzf,
	_UserRoleLowerName[351:354]: UserRoleFzf,
	_UserRoleName[354:357]:      UserRoleGit,
	_UserRoleLowerName[354:357]: UserRoleGit,
	_UserRoleName[357:361]:      UserRoleHtop,
	_UserRoleLowerName[357:361]: UserRoleHtop,
	_UserRoleName[361:367]:      UserRoleNeovim,
	_UserRoleLowerName[361:367]: UserRoleNeovim,
	_UserRoleName[367:370]:      UserRoleNix,
	_UserRoleLowerName[367:370]: UserRoleNix,
	_UserRoleName[370:380]:      UserRoleOhMyPosh,
	_UserRoleLowerName[370:380]: UserRoleOhMyPosh,
	_UserRoleName[380:385]:      UserRolePager,
	_UserRoleLowerName[380:385]: UserRolePager,
	_UserRoleName[385:392]:      UserRoleRipgrep,
	_UserRoleLowerName[385:392]: UserRoleRipgrep,
	_UserRoleName[392:395]:      UserRoleRts,
	_UserRoleLowerName[392:395]: UserRoleRts,
	_UserRoleName[395:402]:      UserRoleScripts,
	_UserRoleLowerName[395:402]: UserRoleScripts,
	_UserRoleName[402:407]:      UserRoleShell,
	_UserRoleLowerName[402:407]: UserRoleShell,
	_UserRoleName[407:410]:      UserRoleSsh,
	_UserRoleLowerName[407:410]: UserRoleSsh,
	_UserRoleName[410:418]:      UserRoleStarship,
	_UserRoleLowerName[410:418]: UserRoleStarship,
	_UserRoleName[418:426]:      UserRoleTerminal,
	_UserRoleLowerName[418:426]: UserRoleTerminal,
	_UserRoleName[426:431]:      UserRoleTheme,
	_UserRoleLowerName[426:431]: UserRoleTheme,
	_UserRoleName[431:435]:      UserRoleTmux,
	_UserRoleLowerName[431:435]: UserRoleTmux,
	_UserRoleName[435:441]:      UserRoleVscode,
	_UserRoleLowerName[435:441]: UserRoleVscode,
	_UserRoleName[441:447]:      UserRoleZoxide,
	_UserRoleLowerName[441:447]: UserRoleZoxide,
	_UserRoleName[447:450]:      UserRoleZsh,
	_UserRoleLowerName[447:450]: UserRoleZsh,
	_UserRoleName[450:453]:      UserRoleZzz,
	_UserRoleLowerName[450:453]: UserRoleZzz,
}

var _UserRoleNames = []string{
	_UserRoleName[0:9],
	_UserRoleName[9:18],
	_UserRoleName[18:22],
	_UserRoleName[22:25],
	_UserRoleName[25:32],
	_UserRoleName[32:43],
	_UserRoleName[43:58],
	_UserRoleName[58:75],
	_UserRoleName[75:93],
	_UserRoleName[93:110],
	_UserRoleName[110:124],
	_UserRoleName[124:143],
	_UserRoleName[143:159],
	_UserRoleName[159:177],
	_UserRoleName[177:192],
	_UserRoleName[192:210],
	_UserRoleName[210:225],
	_UserRoleName[225:243],
	_UserRoleName[243:265],
	_UserRoleName[265:283],
	_UserRoleName[283:299],
	_UserRoleName[299:316],
	_UserRoleName[316:331],
	_UserRoleName[331:337],
	_UserRoleName[337:343],
	_UserRoleName[343:346],
	_UserRoleName[346:351],
	_UserRoleName[351:354],
	_UserRoleName[354:357],
	_UserRoleName[357:361],
	_UserRoleName[361:367],
	_UserRoleName[367:370],
	_UserRoleName[370:380],
	_UserRoleName[380:385],
	_UserRoleName[385:392],
	_UserRoleName[392:395],
	_UserRoleName[395:402],
	_UserRoleName[402:407],
	_UserRoleName[407:410],
	_UserRoleName[410:418],
	_UserRoleName[418:426],
	_UserRoleName[426:431],
	_UserRoleName[431:435],
	_UserRoleName[435:441],
	_UserRoleName[441:447],
	_UserRoleName[447:450],
	_UserRoleName[450:453],
}

// UserRoleString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func UserRoleString(s string) (UserRole, error) {
	if val, ok := _UserRoleNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _UserRoleNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to UserRole values", s)
}

// UserRoleValues returns all values of the enum
func UserRoleValues() []UserRole {
	return _UserRoleValues
}

// UserRoleStrings returns a slice of all String values of the enum
func UserRoleStrings() []string {
	strs := make([]string, len(_UserRoleNames))
	copy(strs, _UserRoleNames)
	return strs
}

// IsAUserRole returns "true" if the value is listed in the enum definition. "false" otherwise
func (i UserRole) IsAUserRole() bool {
	for _, v := range _UserRoleValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for UserRole
func (i UserRole) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for UserRole
func (i *UserRole) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("UserRole should be a string, got %s", data)
	}

	var err error
	*i, err = UserRoleString(s)
	return err
}

// MarshalText implements the encoding.TextMarshaler interface for UserRole
func (i UserRole) MarshalText() ([]byte, error) {
	return []byte(i.String()), nil
}

// UnmarshalText implements the encoding.TextUnmarshaler interface for UserRole
func (i *UserRole) UnmarshalText(text []byte) error {
	var err error
	*i, err = UserRoleString(string(text))
	return err
}
