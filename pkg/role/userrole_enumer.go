// Code generated by "enumer -type UserRole -trimprefix UserRole -linecomment -json -text"; DO NOT EDIT.

package role

import (
	"encoding/json"
	"fmt"
	"strings"
)

const _UserRoleName = "BootstrapAlacrittyBashBatBinBraveBrowserBtopDevelopmentDevelopmentCppDevelopmentDhallDevelopmentElixirDevelopmentGleamDevelopmentGoDevelopmentHaskellDevelopmentJavaDevelopmentKotlinDevelopmentLuaDevelopmentNickelDevelopmentNixDevelopmentNodejsDevelopmentPurescriptDevelopmentPythonDevelopmentRustDevelopmentShellDevelopmentZigDockerEditorEzaFastfetchFlameshotFontsFzfGdbGitHtopLldbNeovimNixOhMyPoshPagerRangerRedshiftRipgrepRofiRtsShellSshStarshipSxhkdTerminalThemeTmuxVscodeWizTreeXdgZoxideZsh"

var _UserRoleIndex = [...]uint16{0, 9, 18, 22, 25, 28, 33, 40, 44, 55, 69, 85, 102, 118, 131, 149, 164, 181, 195, 212, 226, 243, 264, 281, 296, 312, 326, 332, 338, 341, 350, 359, 364, 367, 370, 373, 377, 381, 387, 390, 398, 403, 409, 417, 424, 428, 431, 436, 439, 447, 452, 460, 465, 469, 475, 482, 485, 491, 494}

const _UserRoleLowerName = "bootstrapalacrittybashbatbinbravebrowserbtopdevelopmentdevelopmentcppdevelopmentdhalldevelopmentelixirdevelopmentgleamdevelopmentgodevelopmenthaskelldevelopmentjavadevelopmentkotlindevelopmentluadevelopmentnickeldevelopmentnixdevelopmentnodejsdevelopmentpurescriptdevelopmentpythondevelopmentrustdevelopmentshelldevelopmentzigdockereditorezafastfetchflameshotfontsfzfgdbgithtoplldbneovimnixohmyposhpagerrangerredshiftripgreprofirtsshellsshstarshipsxhkdterminalthemetmuxvscodewiztreexdgzoxidezsh"

func (i UserRole) String() string {
	if i >= UserRole(len(_UserRoleIndex)-1) {
		return fmt.Sprintf("UserRole(%d)", i)
	}
	return _UserRoleName[_UserRoleIndex[i]:_UserRoleIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _UserRoleNoOp() {
	var x [1]struct{}
	_ = x[UserRoleBootstrap-(0)]
	_ = x[UserRoleAlacritty-(1)]
	_ = x[UserRoleBash-(2)]
	_ = x[UserRoleBat-(3)]
	_ = x[UserRoleBin-(4)]
	_ = x[UserRoleBrave-(5)]
	_ = x[UserRoleBrowser-(6)]
	_ = x[UserRoleBtop-(7)]
	_ = x[UserRoleDevelopment-(8)]
	_ = x[UserRoleDevelopmentCpp-(9)]
	_ = x[UserRoleDevelopmentDhall-(10)]
	_ = x[UserRoleDevelopmentElixir-(11)]
	_ = x[UserRoleDevelopmentGleam-(12)]
	_ = x[UserRoleDevelopmentGo-(13)]
	_ = x[UserRoleDevelopmentHaskell-(14)]
	_ = x[UserRoleDevelopmentJava-(15)]
	_ = x[UserRoleDevelopmentKotlin-(16)]
	_ = x[UserRoleDevelopmentLua-(17)]
	_ = x[UserRoleDevelopmentNickel-(18)]
	_ = x[UserRoleDevelopmentNix-(19)]
	_ = x[UserRoleDevelopmentNodejs-(20)]
	_ = x[UserRoleDevelopmentPurescript-(21)]
	_ = x[UserRoleDevelopmentPython-(22)]
	_ = x[UserRoleDevelopmentRust-(23)]
	_ = x[UserRoleDevelopmentShell-(24)]
	_ = x[UserRoleDevelopmentZig-(25)]
	_ = x[UserRoleDocker-(26)]
	_ = x[UserRoleEditor-(27)]
	_ = x[UserRoleEza-(28)]
	_ = x[UserRoleFastfetch-(29)]
	_ = x[UserRoleFlameshot-(30)]
	_ = x[UserRoleFonts-(31)]
	_ = x[UserRoleFzf-(32)]
	_ = x[UserRoleGdb-(33)]
	_ = x[UserRoleGit-(34)]
	_ = x[UserRoleHtop-(35)]
	_ = x[UserRoleLldb-(36)]
	_ = x[UserRoleNeovim-(37)]
	_ = x[UserRoleNix-(38)]
	_ = x[UserRoleOhMyPosh-(39)]
	_ = x[UserRolePager-(40)]
	_ = x[UserRoleRanger-(41)]
	_ = x[UserRoleRedshift-(42)]
	_ = x[UserRoleRipgrep-(43)]
	_ = x[UserRoleRofi-(44)]
	_ = x[UserRoleRts-(45)]
	_ = x[UserRoleShell-(46)]
	_ = x[UserRoleSsh-(47)]
	_ = x[UserRoleStarship-(48)]
	_ = x[UserRoleSxhkd-(49)]
	_ = x[UserRoleTerminal-(50)]
	_ = x[UserRoleTheme-(51)]
	_ = x[UserRoleTmux-(52)]
	_ = x[UserRoleVscode-(53)]
	_ = x[UserRoleWizTree-(54)]
	_ = x[UserRoleXdg-(55)]
	_ = x[UserRoleZoxide-(56)]
	_ = x[UserRoleZsh-(57)]
}

var _UserRoleValues = []UserRole{UserRoleBootstrap, UserRoleAlacritty, UserRoleBash, UserRoleBat, UserRoleBin, UserRoleBrave, UserRoleBrowser, UserRoleBtop, UserRoleDevelopment, UserRoleDevelopmentCpp, UserRoleDevelopmentDhall, UserRoleDevelopmentElixir, UserRoleDevelopmentGleam, UserRoleDevelopmentGo, UserRoleDevelopmentHaskell, UserRoleDevelopmentJava, UserRoleDevelopmentKotlin, UserRoleDevelopmentLua, UserRoleDevelopmentNickel, UserRoleDevelopmentNix, UserRoleDevelopmentNodejs, UserRoleDevelopmentPurescript, UserRoleDevelopmentPython, UserRoleDevelopmentRust, UserRoleDevelopmentShell, UserRoleDevelopmentZig, UserRoleDocker, UserRoleEditor, UserRoleEza, UserRoleFastfetch, UserRoleFlameshot, UserRoleFonts, UserRoleFzf, UserRoleGdb, UserRoleGit, UserRoleHtop, UserRoleLldb, UserRoleNeovim, UserRoleNix, UserRoleOhMyPosh, UserRolePager, UserRoleRanger, UserRoleRedshift, UserRoleRipgrep, UserRoleRofi, UserRoleRts, UserRoleShell, UserRoleSsh, UserRoleStarship, UserRoleSxhkd, UserRoleTerminal, UserRoleTheme, UserRoleTmux, UserRoleVscode, UserRoleWizTree, UserRoleXdg, UserRoleZoxide, UserRoleZsh}

var _UserRoleNameToValueMap = map[string]UserRole{
	_UserRoleName[0:9]:          UserRoleBootstrap,
	_UserRoleLowerName[0:9]:     UserRoleBootstrap,
	_UserRoleName[9:18]:         UserRoleAlacritty,
	_UserRoleLowerName[9:18]:    UserRoleAlacritty,
	_UserRoleName[18:22]:        UserRoleBash,
	_UserRoleLowerName[18:22]:   UserRoleBash,
	_UserRoleName[22:25]:        UserRoleBat,
	_UserRoleLowerName[22:25]:   UserRoleBat,
	_UserRoleName[25:28]:        UserRoleBin,
	_UserRoleLowerName[25:28]:   UserRoleBin,
	_UserRoleName[28:33]:        UserRoleBrave,
	_UserRoleLowerName[28:33]:   UserRoleBrave,
	_UserRoleName[33:40]:        UserRoleBrowser,
	_UserRoleLowerName[33:40]:   UserRoleBrowser,
	_UserRoleName[40:44]:        UserRoleBtop,
	_UserRoleLowerName[40:44]:   UserRoleBtop,
	_UserRoleName[44:55]:        UserRoleDevelopment,
	_UserRoleLowerName[44:55]:   UserRoleDevelopment,
	_UserRoleName[55:69]:        UserRoleDevelopmentCpp,
	_UserRoleLowerName[55:69]:   UserRoleDevelopmentCpp,
	_UserRoleName[69:85]:        UserRoleDevelopmentDhall,
	_UserRoleLowerName[69:85]:   UserRoleDevelopmentDhall,
	_UserRoleName[85:102]:       UserRoleDevelopmentElixir,
	_UserRoleLowerName[85:102]:  UserRoleDevelopmentElixir,
	_UserRoleName[102:118]:      UserRoleDevelopmentGleam,
	_UserRoleLowerName[102:118]: UserRoleDevelopmentGleam,
	_UserRoleName[118:131]:      UserRoleDevelopmentGo,
	_UserRoleLowerName[118:131]: UserRoleDevelopmentGo,
	_UserRoleName[131:149]:      UserRoleDevelopmentHaskell,
	_UserRoleLowerName[131:149]: UserRoleDevelopmentHaskell,
	_UserRoleName[149:164]:      UserRoleDevelopmentJava,
	_UserRoleLowerName[149:164]: UserRoleDevelopmentJava,
	_UserRoleName[164:181]:      UserRoleDevelopmentKotlin,
	_UserRoleLowerName[164:181]: UserRoleDevelopmentKotlin,
	_UserRoleName[181:195]:      UserRoleDevelopmentLua,
	_UserRoleLowerName[181:195]: UserRoleDevelopmentLua,
	_UserRoleName[195:212]:      UserRoleDevelopmentNickel,
	_UserRoleLowerName[195:212]: UserRoleDevelopmentNickel,
	_UserRoleName[212:226]:      UserRoleDevelopmentNix,
	_UserRoleLowerName[212:226]: UserRoleDevelopmentNix,
	_UserRoleName[226:243]:      UserRoleDevelopmentNodejs,
	_UserRoleLowerName[226:243]: UserRoleDevelopmentNodejs,
	_UserRoleName[243:264]:      UserRoleDevelopmentPurescript,
	_UserRoleLowerName[243:264]: UserRoleDevelopmentPurescript,
	_UserRoleName[264:281]:      UserRoleDevelopmentPython,
	_UserRoleLowerName[264:281]: UserRoleDevelopmentPython,
	_UserRoleName[281:296]:      UserRoleDevelopmentRust,
	_UserRoleLowerName[281:296]: UserRoleDevelopmentRust,
	_UserRoleName[296:312]:      UserRoleDevelopmentShell,
	_UserRoleLowerName[296:312]: UserRoleDevelopmentShell,
	_UserRoleName[312:326]:      UserRoleDevelopmentZig,
	_UserRoleLowerName[312:326]: UserRoleDevelopmentZig,
	_UserRoleName[326:332]:      UserRoleDocker,
	_UserRoleLowerName[326:332]: UserRoleDocker,
	_UserRoleName[332:338]:      UserRoleEditor,
	_UserRoleLowerName[332:338]: UserRoleEditor,
	_UserRoleName[338:341]:      UserRoleEza,
	_UserRoleLowerName[338:341]: UserRoleEza,
	_UserRoleName[341:350]:      UserRoleFastfetch,
	_UserRoleLowerName[341:350]: UserRoleFastfetch,
	_UserRoleName[350:359]:      UserRoleFlameshot,
	_UserRoleLowerName[350:359]: UserRoleFlameshot,
	_UserRoleName[359:364]:      UserRoleFonts,
	_UserRoleLowerName[359:364]: UserRoleFonts,
	_UserRoleName[364:367]:      UserRoleFzf,
	_UserRoleLowerName[364:367]: UserRoleFzf,
	_UserRoleName[367:370]:      UserRoleGdb,
	_UserRoleLowerName[367:370]: UserRoleGdb,
	_UserRoleName[370:373]:      UserRoleGit,
	_UserRoleLowerName[370:373]: UserRoleGit,
	_UserRoleName[373:377]:      UserRoleHtop,
	_UserRoleLowerName[373:377]: UserRoleHtop,
	_UserRoleName[377:381]:      UserRoleLldb,
	_UserRoleLowerName[377:381]: UserRoleLldb,
	_UserRoleName[381:387]:      UserRoleNeovim,
	_UserRoleLowerName[381:387]: UserRoleNeovim,
	_UserRoleName[387:390]:      UserRoleNix,
	_UserRoleLowerName[387:390]: UserRoleNix,
	_UserRoleName[390:398]:      UserRoleOhMyPosh,
	_UserRoleLowerName[390:398]: UserRoleOhMyPosh,
	_UserRoleName[398:403]:      UserRolePager,
	_UserRoleLowerName[398:403]: UserRolePager,
	_UserRoleName[403:409]:      UserRoleRanger,
	_UserRoleLowerName[403:409]: UserRoleRanger,
	_UserRoleName[409:417]:      UserRoleRedshift,
	_UserRoleLowerName[409:417]: UserRoleRedshift,
	_UserRoleName[417:424]:      UserRoleRipgrep,
	_UserRoleLowerName[417:424]: UserRoleRipgrep,
	_UserRoleName[424:428]:      UserRoleRofi,
	_UserRoleLowerName[424:428]: UserRoleRofi,
	_UserRoleName[428:431]:      UserRoleRts,
	_UserRoleLowerName[428:431]: UserRoleRts,
	_UserRoleName[431:436]:      UserRoleShell,
	_UserRoleLowerName[431:436]: UserRoleShell,
	_UserRoleName[436:439]:      UserRoleSsh,
	_UserRoleLowerName[436:439]: UserRoleSsh,
	_UserRoleName[439:447]:      UserRoleStarship,
	_UserRoleLowerName[439:447]: UserRoleStarship,
	_UserRoleName[447:452]:      UserRoleSxhkd,
	_UserRoleLowerName[447:452]: UserRoleSxhkd,
	_UserRoleName[452:460]:      UserRoleTerminal,
	_UserRoleLowerName[452:460]: UserRoleTerminal,
	_UserRoleName[460:465]:      UserRoleTheme,
	_UserRoleLowerName[460:465]: UserRoleTheme,
	_UserRoleName[465:469]:      UserRoleTmux,
	_UserRoleLowerName[465:469]: UserRoleTmux,
	_UserRoleName[469:475]:      UserRoleVscode,
	_UserRoleLowerName[469:475]: UserRoleVscode,
	_UserRoleName[475:482]:      UserRoleWizTree,
	_UserRoleLowerName[475:482]: UserRoleWizTree,
	_UserRoleName[482:485]:      UserRoleXdg,
	_UserRoleLowerName[482:485]: UserRoleXdg,
	_UserRoleName[485:491]:      UserRoleZoxide,
	_UserRoleLowerName[485:491]: UserRoleZoxide,
	_UserRoleName[491:494]:      UserRoleZsh,
	_UserRoleLowerName[491:494]: UserRoleZsh,
}

var _UserRoleNames = []string{
	_UserRoleName[0:9],
	_UserRoleName[9:18],
	_UserRoleName[18:22],
	_UserRoleName[22:25],
	_UserRoleName[25:28],
	_UserRoleName[28:33],
	_UserRoleName[33:40],
	_UserRoleName[40:44],
	_UserRoleName[44:55],
	_UserRoleName[55:69],
	_UserRoleName[69:85],
	_UserRoleName[85:102],
	_UserRoleName[102:118],
	_UserRoleName[118:131],
	_UserRoleName[131:149],
	_UserRoleName[149:164],
	_UserRoleName[164:181],
	_UserRoleName[181:195],
	_UserRoleName[195:212],
	_UserRoleName[212:226],
	_UserRoleName[226:243],
	_UserRoleName[243:264],
	_UserRoleName[264:281],
	_UserRoleName[281:296],
	_UserRoleName[296:312],
	_UserRoleName[312:326],
	_UserRoleName[326:332],
	_UserRoleName[332:338],
	_UserRoleName[338:341],
	_UserRoleName[341:350],
	_UserRoleName[350:359],
	_UserRoleName[359:364],
	_UserRoleName[364:367],
	_UserRoleName[367:370],
	_UserRoleName[370:373],
	_UserRoleName[373:377],
	_UserRoleName[377:381],
	_UserRoleName[381:387],
	_UserRoleName[387:390],
	_UserRoleName[390:398],
	_UserRoleName[398:403],
	_UserRoleName[403:409],
	_UserRoleName[409:417],
	_UserRoleName[417:424],
	_UserRoleName[424:428],
	_UserRoleName[428:431],
	_UserRoleName[431:436],
	_UserRoleName[436:439],
	_UserRoleName[439:447],
	_UserRoleName[447:452],
	_UserRoleName[452:460],
	_UserRoleName[460:465],
	_UserRoleName[465:469],
	_UserRoleName[469:475],
	_UserRoleName[475:482],
	_UserRoleName[482:485],
	_UserRoleName[485:491],
	_UserRoleName[491:494],
}

// UserRoleString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func UserRoleString(s string) (UserRole, error) {
	if val, ok := _UserRoleNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _UserRoleNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to UserRole values", s)
}

// UserRoleValues returns all values of the enum
func UserRoleValues() []UserRole {
	return _UserRoleValues
}

// UserRoleStrings returns a slice of all String values of the enum
func UserRoleStrings() []string {
	strs := make([]string, len(_UserRoleNames))
	copy(strs, _UserRoleNames)
	return strs
}

// IsAUserRole returns "true" if the value is listed in the enum definition. "false" otherwise
func (i UserRole) IsAUserRole() bool {
	for _, v := range _UserRoleValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for UserRole
func (i UserRole) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for UserRole
func (i *UserRole) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("UserRole should be a string, got %s", data)
	}

	var err error
	*i, err = UserRoleString(s)
	return err
}

// MarshalText implements the encoding.TextMarshaler interface for UserRole
func (i UserRole) MarshalText() ([]byte, error) {
	return []byte(i.String()), nil
}

// UnmarshalText implements the encoding.TextUnmarshaler interface for UserRole
func (i *UserRole) UnmarshalText(text []byte) error {
	var err error
	*i, err = UserRoleString(string(text))
	return err
}
