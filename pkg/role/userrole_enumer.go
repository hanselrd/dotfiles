// Code generated by "enumer -type UserRole -trimprefix UserRole -linecomment -json -text -transform lower"; DO NOT EDIT.

package role

import (
	"encoding/json"
	"fmt"
	"strings"
)

const _UserRoleName = "bootstrapalacrittybashbatbrowserbtopdevelopmentdevelopment.cppdevelopment.dhalldevelopment.elixirdevelopment.gleamdevelopment.godevelopment.haskelldevelopment.javadevelopment.kotlindevelopment.luadevelopment.nickeldevelopment.nixdevelopment.nodejsdevelopment.purescriptdevelopment.pythondevelopment.rustdevelopment.shelldevelopment.zigdockereditorezafontsfzfgdbgithtopneovimnixoh-my-poshpagerrangerripgreprtsscriptsshellsshstarshipterminalthemetmuxvscodexdgzoxidezsh"

var _UserRoleIndex = [...]uint16{0, 9, 18, 22, 25, 32, 36, 47, 62, 79, 97, 114, 128, 147, 163, 181, 196, 214, 229, 247, 269, 287, 303, 320, 335, 341, 347, 350, 355, 358, 361, 364, 368, 374, 377, 387, 392, 398, 405, 408, 415, 420, 423, 431, 439, 444, 448, 454, 457, 463, 466}

const _UserRoleLowerName = "bootstrapalacrittybashbatbrowserbtopdevelopmentdevelopment.cppdevelopment.dhalldevelopment.elixirdevelopment.gleamdevelopment.godevelopment.haskelldevelopment.javadevelopment.kotlindevelopment.luadevelopment.nickeldevelopment.nixdevelopment.nodejsdevelopment.purescriptdevelopment.pythondevelopment.rustdevelopment.shelldevelopment.zigdockereditorezafontsfzfgdbgithtopneovimnixoh-my-poshpagerrangerripgreprtsscriptsshellsshstarshipterminalthemetmuxvscodexdgzoxidezsh"

func (i UserRole) String() string {
	if i >= UserRole(len(_UserRoleIndex)-1) {
		return fmt.Sprintf("UserRole(%d)", i)
	}
	return _UserRoleName[_UserRoleIndex[i]:_UserRoleIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _UserRoleNoOp() {
	var x [1]struct{}
	_ = x[UserRoleBootstrap-(0)]
	_ = x[UserRoleAlacritty-(1)]
	_ = x[UserRoleBash-(2)]
	_ = x[UserRoleBat-(3)]
	_ = x[UserRoleBrowser-(4)]
	_ = x[UserRoleBtop-(5)]
	_ = x[UserRoleDevelopment-(6)]
	_ = x[UserRoleDevelopmentCpp-(7)]
	_ = x[UserRoleDevelopmentDhall-(8)]
	_ = x[UserRoleDevelopmentElixir-(9)]
	_ = x[UserRoleDevelopmentGleam-(10)]
	_ = x[UserRoleDevelopmentGo-(11)]
	_ = x[UserRoleDevelopmentHaskell-(12)]
	_ = x[UserRoleDevelopmentJava-(13)]
	_ = x[UserRoleDevelopmentKotlin-(14)]
	_ = x[UserRoleDevelopmentLua-(15)]
	_ = x[UserRoleDevelopmentNickel-(16)]
	_ = x[UserRoleDevelopmentNix-(17)]
	_ = x[UserRoleDevelopmentNodejs-(18)]
	_ = x[UserRoleDevelopmentPurescript-(19)]
	_ = x[UserRoleDevelopmentPython-(20)]
	_ = x[UserRoleDevelopmentRust-(21)]
	_ = x[UserRoleDevelopmentShell-(22)]
	_ = x[UserRoleDevelopmentZig-(23)]
	_ = x[UserRoleDocker-(24)]
	_ = x[UserRoleEditor-(25)]
	_ = x[UserRoleEza-(26)]
	_ = x[UserRoleFonts-(27)]
	_ = x[UserRoleFzf-(28)]
	_ = x[UserRoleGdb-(29)]
	_ = x[UserRoleGit-(30)]
	_ = x[UserRoleHtop-(31)]
	_ = x[UserRoleNeovim-(32)]
	_ = x[UserRoleNix-(33)]
	_ = x[UserRoleOhMyPosh-(34)]
	_ = x[UserRolePager-(35)]
	_ = x[UserRoleRanger-(36)]
	_ = x[UserRoleRipgrep-(37)]
	_ = x[UserRoleRts-(38)]
	_ = x[UserRoleScripts-(39)]
	_ = x[UserRoleShell-(40)]
	_ = x[UserRoleSsh-(41)]
	_ = x[UserRoleStarship-(42)]
	_ = x[UserRoleTerminal-(43)]
	_ = x[UserRoleTheme-(44)]
	_ = x[UserRoleTmux-(45)]
	_ = x[UserRoleVscode-(46)]
	_ = x[UserRoleXdg-(47)]
	_ = x[UserRoleZoxide-(48)]
	_ = x[UserRoleZsh-(49)]
}

var _UserRoleValues = []UserRole{UserRoleBootstrap, UserRoleAlacritty, UserRoleBash, UserRoleBat, UserRoleBrowser, UserRoleBtop, UserRoleDevelopment, UserRoleDevelopmentCpp, UserRoleDevelopmentDhall, UserRoleDevelopmentElixir, UserRoleDevelopmentGleam, UserRoleDevelopmentGo, UserRoleDevelopmentHaskell, UserRoleDevelopmentJava, UserRoleDevelopmentKotlin, UserRoleDevelopmentLua, UserRoleDevelopmentNickel, UserRoleDevelopmentNix, UserRoleDevelopmentNodejs, UserRoleDevelopmentPurescript, UserRoleDevelopmentPython, UserRoleDevelopmentRust, UserRoleDevelopmentShell, UserRoleDevelopmentZig, UserRoleDocker, UserRoleEditor, UserRoleEza, UserRoleFonts, UserRoleFzf, UserRoleGdb, UserRoleGit, UserRoleHtop, UserRoleNeovim, UserRoleNix, UserRoleOhMyPosh, UserRolePager, UserRoleRanger, UserRoleRipgrep, UserRoleRts, UserRoleScripts, UserRoleShell, UserRoleSsh, UserRoleStarship, UserRoleTerminal, UserRoleTheme, UserRoleTmux, UserRoleVscode, UserRoleXdg, UserRoleZoxide, UserRoleZsh}

var _UserRoleNameToValueMap = map[string]UserRole{
	_UserRoleName[0:9]:          UserRoleBootstrap,
	_UserRoleLowerName[0:9]:     UserRoleBootstrap,
	_UserRoleName[9:18]:         UserRoleAlacritty,
	_UserRoleLowerName[9:18]:    UserRoleAlacritty,
	_UserRoleName[18:22]:        UserRoleBash,
	_UserRoleLowerName[18:22]:   UserRoleBash,
	_UserRoleName[22:25]:        UserRoleBat,
	_UserRoleLowerName[22:25]:   UserRoleBat,
	_UserRoleName[25:32]:        UserRoleBrowser,
	_UserRoleLowerName[25:32]:   UserRoleBrowser,
	_UserRoleName[32:36]:        UserRoleBtop,
	_UserRoleLowerName[32:36]:   UserRoleBtop,
	_UserRoleName[36:47]:        UserRoleDevelopment,
	_UserRoleLowerName[36:47]:   UserRoleDevelopment,
	_UserRoleName[47:62]:        UserRoleDevelopmentCpp,
	_UserRoleLowerName[47:62]:   UserRoleDevelopmentCpp,
	_UserRoleName[62:79]:        UserRoleDevelopmentDhall,
	_UserRoleLowerName[62:79]:   UserRoleDevelopmentDhall,
	_UserRoleName[79:97]:        UserRoleDevelopmentElixir,
	_UserRoleLowerName[79:97]:   UserRoleDevelopmentElixir,
	_UserRoleName[97:114]:       UserRoleDevelopmentGleam,
	_UserRoleLowerName[97:114]:  UserRoleDevelopmentGleam,
	_UserRoleName[114:128]:      UserRoleDevelopmentGo,
	_UserRoleLowerName[114:128]: UserRoleDevelopmentGo,
	_UserRoleName[128:147]:      UserRoleDevelopmentHaskell,
	_UserRoleLowerName[128:147]: UserRoleDevelopmentHaskell,
	_UserRoleName[147:163]:      UserRoleDevelopmentJava,
	_UserRoleLowerName[147:163]: UserRoleDevelopmentJava,
	_UserRoleName[163:181]:      UserRoleDevelopmentKotlin,
	_UserRoleLowerName[163:181]: UserRoleDevelopmentKotlin,
	_UserRoleName[181:196]:      UserRoleDevelopmentLua,
	_UserRoleLowerName[181:196]: UserRoleDevelopmentLua,
	_UserRoleName[196:214]:      UserRoleDevelopmentNickel,
	_UserRoleLowerName[196:214]: UserRoleDevelopmentNickel,
	_UserRoleName[214:229]:      UserRoleDevelopmentNix,
	_UserRoleLowerName[214:229]: UserRoleDevelopmentNix,
	_UserRoleName[229:247]:      UserRoleDevelopmentNodejs,
	_UserRoleLowerName[229:247]: UserRoleDevelopmentNodejs,
	_UserRoleName[247:269]:      UserRoleDevelopmentPurescript,
	_UserRoleLowerName[247:269]: UserRoleDevelopmentPurescript,
	_UserRoleName[269:287]:      UserRoleDevelopmentPython,
	_UserRoleLowerName[269:287]: UserRoleDevelopmentPython,
	_UserRoleName[287:303]:      UserRoleDevelopmentRust,
	_UserRoleLowerName[287:303]: UserRoleDevelopmentRust,
	_UserRoleName[303:320]:      UserRoleDevelopmentShell,
	_UserRoleLowerName[303:320]: UserRoleDevelopmentShell,
	_UserRoleName[320:335]:      UserRoleDevelopmentZig,
	_UserRoleLowerName[320:335]: UserRoleDevelopmentZig,
	_UserRoleName[335:341]:      UserRoleDocker,
	_UserRoleLowerName[335:341]: UserRoleDocker,
	_UserRoleName[341:347]:      UserRoleEditor,
	_UserRoleLowerName[341:347]: UserRoleEditor,
	_UserRoleName[347:350]:      UserRoleEza,
	_UserRoleLowerName[347:350]: UserRoleEza,
	_UserRoleName[350:355]:      UserRoleFonts,
	_UserRoleLowerName[350:355]: UserRoleFonts,
	_UserRoleName[355:358]:      UserRoleFzf,
	_UserRoleLowerName[355:358]: UserRoleFzf,
	_UserRoleName[358:361]:      UserRoleGdb,
	_UserRoleLowerName[358:361]: UserRoleGdb,
	_UserRoleName[361:364]:      UserRoleGit,
	_UserRoleLowerName[361:364]: UserRoleGit,
	_UserRoleName[364:368]:      UserRoleHtop,
	_UserRoleLowerName[364:368]: UserRoleHtop,
	_UserRoleName[368:374]:      UserRoleNeovim,
	_UserRoleLowerName[368:374]: UserRoleNeovim,
	_UserRoleName[374:377]:      UserRoleNix,
	_UserRoleLowerName[374:377]: UserRoleNix,
	_UserRoleName[377:387]:      UserRoleOhMyPosh,
	_UserRoleLowerName[377:387]: UserRoleOhMyPosh,
	_UserRoleName[387:392]:      UserRolePager,
	_UserRoleLowerName[387:392]: UserRolePager,
	_UserRoleName[392:398]:      UserRoleRanger,
	_UserRoleLowerName[392:398]: UserRoleRanger,
	_UserRoleName[398:405]:      UserRoleRipgrep,
	_UserRoleLowerName[398:405]: UserRoleRipgrep,
	_UserRoleName[405:408]:      UserRoleRts,
	_UserRoleLowerName[405:408]: UserRoleRts,
	_UserRoleName[408:415]:      UserRoleScripts,
	_UserRoleLowerName[408:415]: UserRoleScripts,
	_UserRoleName[415:420]:      UserRoleShell,
	_UserRoleLowerName[415:420]: UserRoleShell,
	_UserRoleName[420:423]:      UserRoleSsh,
	_UserRoleLowerName[420:423]: UserRoleSsh,
	_UserRoleName[423:431]:      UserRoleStarship,
	_UserRoleLowerName[423:431]: UserRoleStarship,
	_UserRoleName[431:439]:      UserRoleTerminal,
	_UserRoleLowerName[431:439]: UserRoleTerminal,
	_UserRoleName[439:444]:      UserRoleTheme,
	_UserRoleLowerName[439:444]: UserRoleTheme,
	_UserRoleName[444:448]:      UserRoleTmux,
	_UserRoleLowerName[444:448]: UserRoleTmux,
	_UserRoleName[448:454]:      UserRoleVscode,
	_UserRoleLowerName[448:454]: UserRoleVscode,
	_UserRoleName[454:457]:      UserRoleXdg,
	_UserRoleLowerName[454:457]: UserRoleXdg,
	_UserRoleName[457:463]:      UserRoleZoxide,
	_UserRoleLowerName[457:463]: UserRoleZoxide,
	_UserRoleName[463:466]:      UserRoleZsh,
	_UserRoleLowerName[463:466]: UserRoleZsh,
}

var _UserRoleNames = []string{
	_UserRoleName[0:9],
	_UserRoleName[9:18],
	_UserRoleName[18:22],
	_UserRoleName[22:25],
	_UserRoleName[25:32],
	_UserRoleName[32:36],
	_UserRoleName[36:47],
	_UserRoleName[47:62],
	_UserRoleName[62:79],
	_UserRoleName[79:97],
	_UserRoleName[97:114],
	_UserRoleName[114:128],
	_UserRoleName[128:147],
	_UserRoleName[147:163],
	_UserRoleName[163:181],
	_UserRoleName[181:196],
	_UserRoleName[196:214],
	_UserRoleName[214:229],
	_UserRoleName[229:247],
	_UserRoleName[247:269],
	_UserRoleName[269:287],
	_UserRoleName[287:303],
	_UserRoleName[303:320],
	_UserRoleName[320:335],
	_UserRoleName[335:341],
	_UserRoleName[341:347],
	_UserRoleName[347:350],
	_UserRoleName[350:355],
	_UserRoleName[355:358],
	_UserRoleName[358:361],
	_UserRoleName[361:364],
	_UserRoleName[364:368],
	_UserRoleName[368:374],
	_UserRoleName[374:377],
	_UserRoleName[377:387],
	_UserRoleName[387:392],
	_UserRoleName[392:398],
	_UserRoleName[398:405],
	_UserRoleName[405:408],
	_UserRoleName[408:415],
	_UserRoleName[415:420],
	_UserRoleName[420:423],
	_UserRoleName[423:431],
	_UserRoleName[431:439],
	_UserRoleName[439:444],
	_UserRoleName[444:448],
	_UserRoleName[448:454],
	_UserRoleName[454:457],
	_UserRoleName[457:463],
	_UserRoleName[463:466],
}

// UserRoleString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func UserRoleString(s string) (UserRole, error) {
	if val, ok := _UserRoleNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _UserRoleNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to UserRole values", s)
}

// UserRoleValues returns all values of the enum
func UserRoleValues() []UserRole {
	return _UserRoleValues
}

// UserRoleStrings returns a slice of all String values of the enum
func UserRoleStrings() []string {
	strs := make([]string, len(_UserRoleNames))
	copy(strs, _UserRoleNames)
	return strs
}

// IsAUserRole returns "true" if the value is listed in the enum definition. "false" otherwise
func (i UserRole) IsAUserRole() bool {
	for _, v := range _UserRoleValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for UserRole
func (i UserRole) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for UserRole
func (i *UserRole) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("UserRole should be a string, got %s", data)
	}

	var err error
	*i, err = UserRoleString(s)
	return err
}

// MarshalText implements the encoding.TextMarshaler interface for UserRole
func (i UserRole) MarshalText() ([]byte, error) {
	return []byte(i.String()), nil
}

// UnmarshalText implements the encoding.TextUnmarshaler interface for UserRole
func (i *UserRole) UnmarshalText(text []byte) error {
	var err error
	*i, err = UserRoleString(string(text))
	return err
}
