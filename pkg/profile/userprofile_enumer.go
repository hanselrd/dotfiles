// Code generated by "enumer -type UserProfile -trimprefix UserProfile"; DO NOT EDIT.

package profile

import (
	"fmt"
	"strings"
)

const _UserProfileName = "BaseStandardMinimalFull"

var _UserProfileIndex = [...]uint8{0, 4, 12, 19, 23}

const _UserProfileLowerName = "basestandardminimalfull"

func (i UserProfile) String() string {
	if i >= UserProfile(len(_UserProfileIndex)-1) {
		return fmt.Sprintf("UserProfile(%d)", i)
	}
	return _UserProfileName[_UserProfileIndex[i]:_UserProfileIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _UserProfileNoOp() {
	var x [1]struct{}
	_ = x[UserProfileBase-(0)]
	_ = x[UserProfileStandard-(1)]
	_ = x[UserProfileMinimal-(2)]
	_ = x[UserProfileFull-(3)]
}

var _UserProfileValues = []UserProfile{UserProfileBase, UserProfileStandard, UserProfileMinimal, UserProfileFull}

var _UserProfileNameToValueMap = map[string]UserProfile{
	_UserProfileName[0:4]:        UserProfileBase,
	_UserProfileLowerName[0:4]:   UserProfileBase,
	_UserProfileName[4:12]:       UserProfileStandard,
	_UserProfileLowerName[4:12]:  UserProfileStandard,
	_UserProfileName[12:19]:      UserProfileMinimal,
	_UserProfileLowerName[12:19]: UserProfileMinimal,
	_UserProfileName[19:23]:      UserProfileFull,
	_UserProfileLowerName[19:23]: UserProfileFull,
}

var _UserProfileNames = []string{
	_UserProfileName[0:4],
	_UserProfileName[4:12],
	_UserProfileName[12:19],
	_UserProfileName[19:23],
}

// UserProfileString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func UserProfileString(s string) (UserProfile, error) {
	if val, ok := _UserProfileNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _UserProfileNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to UserProfile values", s)
}

// UserProfileValues returns all values of the enum
func UserProfileValues() []UserProfile {
	return _UserProfileValues
}

// UserProfileStrings returns a slice of all String values of the enum
func UserProfileStrings() []string {
	strs := make([]string, len(_UserProfileNames))
	copy(strs, _UserProfileNames)
	return strs
}

// IsAUserProfile returns "true" if the value is listed in the enum definition. "false" otherwise
func (i UserProfile) IsAUserProfile() bool {
	for _, v := range _UserProfileValues {
		if i == v {
			return true
		}
	}
	return false
}
