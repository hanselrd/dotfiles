//go:build ignore

package main

import (
	"fmt"
	"os"
	"path/filepath"
	"reflect"
	"strings"

	. "github.com/dave/jennifer/jen"

	"github.com/hanselrd/dotfiles/lib/enums"
)

func main() {
	goPackage := os.Getenv("GOPACKAGE")

	f := NewFile(goPackage)

	f.PackageComment("Code generated by generator; DO NOT EDIT.")

	f.Var().Id(fmt.Sprintf("%sMapStruct", os.Args[1])).
		Op("=").Map(Qual("github.com/hanselrd/dotfiles/lib/enums", os.Args[1])).
		Qual("github.com/hanselrd/dotfiles/lib/structs", os.Args[1]).Values(
		DictFunc(func(d Dict) {
			vs := reflect.ValueOf(enums.Reflect["Themes"]).Call(nil)[0]
			for i := 0; i < vs.Len(); i++ {
				v := vs.Index(i)
				vStr := v.MethodByName("String").Call(nil)[0].String()
				d[Qual("github.com/hanselrd/dotfiles/lib/enums", fmt.Sprintf("%s%s", os.Args[1], strings.ReplaceAll(strings.Title(vStr), "-", "")))] = Id(strings.ReplaceAll(strings.Title(vStr), "-", ""))
			}
		}))

	goFile := os.Getenv("GOFILE")
	ext := filepath.Ext(goFile)
	baseFilename := goFile[0 : len(goFile)-len(ext)]
	targetFilename := baseFilename + "_gen.go"

	f.Save(targetFilename)
}
