//go:build ignore

package main

import (
	"fmt"
	"os"
	"path/filepath"
	"strings"

	. "github.com/dave/jennifer/jen"
	"golang.org/x/text/cases"
	"golang.org/x/text/language"

	"github.com/hanselrd/dotfiles/lib/enums"
)

func main() {
	goPackage := os.Getenv("GOPACKAGE")

	f := NewFile(goPackage)

	f.PackageComment("Code generated by \"generator\"; DO NOT EDIT.")

	caser := cases.Title(language.English)

	f.Var().Id("ThemeMapStruct").
		Op("=").Map(Qual("github.com/hanselrd/dotfiles/lib/enums", "Theme")).
		Qual("github.com/hanselrd/dotfiles/lib/structs", "Theme").Values(
		DictFunc(func(d Dict) {
			for _, theme := range enums.ThemeValues() {
				d[Qual("github.com/hanselrd/dotfiles/lib/enums", fmt.Sprintf("Theme%s", strings.ReplaceAll(caser.String(theme.String()), "-", "")))] = Id(
					strings.ReplaceAll(caser.String(theme.String()), "-", ""),
				)
			}
		}))

	goFile := os.Getenv("GOFILE")
	ext := filepath.Ext(goFile)
	baseFilename := goFile[0 : len(goFile)-len(ext)]
	targetFilename := baseFilename + "_gen.go"

	f.Save(targetFilename)
}
