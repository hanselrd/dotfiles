//go:build ignore

package main

import (
	"fmt"
	"os"
	"path/filepath"
	"strings"

	. "github.com/dave/jennifer/jen"

	"github.com/hanselrd/dotfiles/lib/enums"
	"github.com/hanselrd/dotfiles/lib/utils"
)

func main() {
	goPackage := os.Getenv("GOPACKAGE")

	f := NewFile(goPackage)

	f.PackageComment("Code generated by generator; DO NOT EDIT.")

	f.Var().DefsFunc(func(g *Group) {
		for _, systemProfile := range enums.SystemProfiles() {
			systemProfileTitled := strings.ReplaceAll(
				utils.Caser.Title.String(systemProfile.String()),
				"-",
				"",
			)
			for _, userProfile := range enums.UserProfiles() {
				userProfileTitled := strings.ReplaceAll(
					utils.Caser.Title.String(userProfile.String()),
					"-",
					"",
				)
				g.Id(fmt.Sprintf("%s%s", systemProfileTitled, userProfileTitled)).
					Op("=").
					Op("*").
					Qual("github.com/hanselrd/dotfiles/lib/structs", "NewProfile").
					Call(
						Qual(
							"github.com/hanselrd/dotfiles/lib/enums",
							fmt.Sprintf("SystemProfile%s", systemProfileTitled),
						),
						Qual(
							"github.com/hanselrd/dotfiles/lib/enums",
							fmt.Sprintf(
								"UserProfile%s",
								userProfileTitled,
							),
						),
					)
			}
		}
	})

	f.Var().DefsFunc(func(g *Group) {
		for _, systemProfile := range enums.SystemProfiles() {
			systemProfileTitled := strings.ReplaceAll(
				utils.Caser.Title.String(systemProfile.String()),
				"-",
				"",
			)
			g.Id(fmt.Sprintf("%sProfiles", systemProfileTitled)).
				Op("=").
				Index().
				Qual("github.com/hanselrd/dotfiles/lib/structs", "Profile").
				ValuesFunc(func(gg *Group) {
					for _, userProfile := range enums.UserProfiles() {
						userProfileTitled := strings.ReplaceAll(
							utils.Caser.Title.String(userProfile.String()),
							"-",
							"",
						)
						gg.Id(
							fmt.Sprintf(
								"%s%s",
								systemProfileTitled,
								userProfileTitled,
							),
						)
					}
				})
		}
		g.Id("HomeManagerProfiles").Op("=").Qual("slices", "Concat").CallFunc(func(gg *Group) {
			for _, systemProfile := range enums.SystemProfiles() {
				systemProfileTitled := strings.ReplaceAll(
					utils.Caser.Title.String(systemProfile.String()),
					"-",
					"",
				)
				gg.Id(fmt.Sprintf("%sProfiles", systemProfileTitled))
			}
		})
	})

	goFile := os.Getenv("GOFILE")
	ext := filepath.Ext(goFile)
	baseFilename := goFile[0 : len(goFile)-len(ext)]
	targetFilename := baseFilename + "_gen.go"

	f.Save(targetFilename)
}
