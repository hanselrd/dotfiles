// Code generated by generator; DO NOT EDIT.
package profiles

import (
	"slices"

	enums "github.com/hanselrd/dotfiles/lib/enums"
	structs "github.com/hanselrd/dotfiles/lib/structs"
)

var (
	NixosBase     = *structs.NewProfile(enums.SystemProfileNixos, enums.UserProfileBase)
	NixosStandard = *structs.NewProfile(enums.SystemProfileNixos, enums.UserProfileStandard)
	NixosMinimal  = *structs.NewProfile(enums.SystemProfileNixos, enums.UserProfileMinimal)
	NixosFull     = *structs.NewProfile(enums.SystemProfileNixos, enums.UserProfileFull)
	MacosBase     = *structs.NewProfile(enums.SystemProfileMacos, enums.UserProfileBase)
	MacosStandard = *structs.NewProfile(enums.SystemProfileMacos, enums.UserProfileStandard)
	MacosMinimal  = *structs.NewProfile(enums.SystemProfileMacos, enums.UserProfileMinimal)
	MacosFull     = *structs.NewProfile(enums.SystemProfileMacos, enums.UserProfileFull)
	LinuxBase     = *structs.NewProfile(enums.SystemProfileLinux, enums.UserProfileBase)
	LinuxStandard = *structs.NewProfile(enums.SystemProfileLinux, enums.UserProfileStandard)
	LinuxMinimal  = *structs.NewProfile(enums.SystemProfileLinux, enums.UserProfileMinimal)
	LinuxFull     = *structs.NewProfile(enums.SystemProfileLinux, enums.UserProfileFull)
	WslBase       = *structs.NewProfile(enums.SystemProfileWsl, enums.UserProfileBase)
	WslStandard   = *structs.NewProfile(enums.SystemProfileWsl, enums.UserProfileStandard)
	WslMinimal    = *structs.NewProfile(enums.SystemProfileWsl, enums.UserProfileMinimal)
	WslFull       = *structs.NewProfile(enums.SystemProfileWsl, enums.UserProfileFull)
)
var (
	NixosProfiles       = []structs.Profile{NixosBase, NixosStandard, NixosMinimal, NixosFull}
	MacosProfiles       = []structs.Profile{MacosBase, MacosStandard, MacosMinimal, MacosFull}
	LinuxProfiles       = []structs.Profile{LinuxBase, LinuxStandard, LinuxMinimal, LinuxFull}
	WslProfiles         = []structs.Profile{WslBase, WslStandard, WslMinimal, WslFull}
	HomeManagerProfiles = slices.Concat(NixosProfiles, MacosProfiles, LinuxProfiles, WslProfiles)
)
